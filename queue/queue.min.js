function copyLink(n){navigator.clipboard.writeText(n),copyTooltip.show(),setTimeout((()=>{copyTooltip.hide()}),1e3)}let client,loginButton,modal1,modal2,modal3,modal4,modal5,modal6,modal7,modal8,modal9,modal10,elements={modal1:document.getElementById("modal1"),modal2:document.getElementById("modal2"),modal3:document.getElementById("modal3"),modal4:document.getElementById("modal4"),modal5:document.getElementById("modal5"),modal6:document.getElementById("modal6"),modal7:document.getElementById("modal7"),modal8:document.getElementById("modal8"),modal9:document.getElementById("modal9"),modal10:document.getElementById("modal10"),status:document.getElementById("status"),botStatus:document.getElementById("botStatus"),topRight:document.getElementById("topRight"),loginButton:document.getElementById("loginButton")},color="",currentTime=0,QUEUE={userID:"",channel:"",access_token:"",refresh_token:"",platform:""};function refreshData(){}function saveSettings(){refreshData(),localStorage.setItem("QUEUE",JSON.stringify(QUEUE))}function load_localStorage(){localStorage.getItem("QUEUE")&&(QUEUE=JSON.parse(localStorage.getItem("QUEUE"))),localStorage.getItem("QUEUE")}function resetSettings(){return localStorage.setItem("QUEUE",JSON.stringify({userID:"",channel:"",access_token:"",refresh_token:"",platform:""})),localStorage.setItem("QUEUE",JSON.stringify({})),location.reload(),!1}function reset(){}function login(){return elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n        <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n      </button>\n        <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n            <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n        </ul>\n    </div>\n</div>',window.open("/prompt.html","loginWindow","toolbar=0,status=0,scrollbars=0,width=500px,height=800px"),!1}function connect(){elements.status.innerHTML='\n  <h4>\n  <span class="badge bg-warning">Connecting... \n  <div class="spinner-border" style="width:18px;height:18px;" role="status"><span class="visually-hidden">Loading...</span></div>\n  </span>\n  </h4>',elements.topRight.innerHTML='\n  <div class="btn-group" role="group" aria-label="log in button group">\n  <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n  <div class="btn-group" role="group">\n  <button id="btnGroupDroplogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>\n  <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n  <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n  </ul>\n  </div>\n  </div>',refreshData();let n={options:{clientId:CLIENT_ID,debug:!1},connection:{secure:!0,reconnect:!0},channels:[QUEUE.channel]};client=new tmi.client(n),client.on("message",(async(n,t,e,o)=>{let a=e.split(" ").filter(Boolean);a[0].toLowerCase(),a.slice(1)})),client.on("timeout",((n,t,e,o,a)=>{})),client.on("connected",(async(n,t)=>{elements.status.innerHTML='<h4><span class="badge bg-success">Connected :)</span></h4>',saveSettings(),sendUsername("chat.vote/queue",QUEUE.channel,QUEUE.platform),await checkTags(QUEUE.userID,QUEUE.access_token)&&(elements.vtsLink.style.display=""),loadPFP()})),client.on("disconnected",(n=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${n}</span></h4>`})),client.on("notice",((n,t,e)=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${e}</span></h4>`})),client.connect().catch(console.error)}async function loadPFP(){if(!QUEUE.channel)return void(elements.topRight.innerHTML='<a\n    role="button"\n    id="loginButton"\n    onclick="login()"\n    class="btn btn-twitch"\n    tabindex="0"\n    data-bs-container="body"\n    data-bs-custom-class="custom-popover"\n    data-bs-placement="bottom"\n    data-bs-trigger="manual"\n    data-bs-toggle="popover"\n    data-bs-title="Not signed in"\n    data-bs-content="You need sign in first">\n    <span class="twitch-icon"></span>Sign in with Twitch</a>');let n=await get7TVPFP(QUEUE.userID);"/pics/donk.png"==n&&QUEUE.access_token&&(n=await getTwitchPFP(QUEUE.channel,QUEUE.access_token)),elements.topRight.innerHTML=`\n  <div class="btn-group" role="group" aria-label="Button group with nested dropdown">\n  <button type="button" class="btn btn-secondary"><img src="${n}" alt="profile pic" style="height:2em;"></button>\n  <div class="btn-group" role="group">\n  <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n  ${QUEUE.channel}\n  </button>\n  <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n  <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n  </ul>\n  </div>\n  </div>`}function checkLogin(){return!!QUEUE.channel||(loginButton.show(),setTimeout((function(){loginButton.hide()}),4e3),!1)}function firstMessageWarning(n){showToast(`<i class="material-icons notranslate">warning_amber</i>${n}'s first ever message in chat was a vote.`,"warning",3e3)}function logout(){elements.topRight.innerHTML='<a\n    role="button"\n    id="loginButton"\n    onclick="login()"\n    class="btn btn-twitch"\n    tabindex="0"\n    data-bs-container="body"\n    data-bs-custom-class="custom-popover"\n    data-bs-placement="bottom"\n    data-bs-trigger="manual"\n    data-bs-toggle="popover"\n    data-bs-title="Not signed in"\n    data-bs-content="You need sign in first">\n    <span class="twitch-icon"></span>Sign in with Twitch</a>',resetSettings()}async function loadAndConnect(){load_localStorage(),refreshData(),QUEUE.channel&&connect()}window.onload=function(){QUEUE.channel||(loginButton=new bootstrap.Popover(elements.loginButton)),enableTooltips(),enablePopovers();[...document.querySelectorAll(".offcanvas")].map((n=>new bootstrap.Offcanvas(n)))},window.onbeforeunload=function(){return disconnectBot(),null};