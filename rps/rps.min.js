let loginExpiredModal,copyLinkButton,elements={loginButton:document.getElementById("loginButton"),topRight:document.getElementById("topRight"),darkTheme:document.getElementById("darkTheme"),loginExpiredModal:document.getElementById("loginExpiredModal"),left_rock:document.getElementById("left_rock"),left_paper:document.getElementById("left_paper"),left_scissors:document.getElementById("left_scissors"),right_rock:document.getElementById("right_rock"),right_paper:document.getElementById("right_paper"),right_scissors:document.getElementById("right_scissors"),toastContainer:document.getElementById("toastContainer"),gameLink:document.getElementById("gameLink"),copyLinkButton:document.getElementById("copyLinkButton")},darkTheme=!0,USER={channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""};function login(){return elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n      <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n      <div class="btn-group" role="group">\n          <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n        </button>\n          <ul class="dropdown-menu dropdown-menu-lg-end" aria-label="Log out">\n              <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n          </ul>\n      </div>\n  </div>',window.open("/prompt.html","loginWindow","toolbar=0,status=0,scrollbars=0,width=500px,height=800px"),!1}function logout(){elements.topRight.innerHTML='<a role="button" id="loginButton" onclick="login()" class="btn btn-twitch" tabindex="0"> <span class="twitch-icon"></span>Sign in with Twitch </a>',resetSettings(!0)}async function loadPFP(){if(!USER.channel)return void(elements.topRight.innerHTML='<a role="button" id="loginButton" onclick="login()" class="btn btn-twitch" tabindex="0"> <span class="twitch-icon"></span>Sign in with Twitch </a>');let t=await get7TVPFP(USER.userID);"/pics/donk.png"==t&&USER.access_token&&(t=await getTwitchPFP(USER.channel,USER.access_token)),elements.topRight.innerHTML=`\n    <div class="btn-group" role="group" aria-label="Button group with nested dropdown">\n    <button type="button" id="btnGroupDrop2" class="btn btn-${darkTheme?"dark":"secondary"}"><img src="${t}" alt="profile pic" style="height:2em;"></button>\n    <div class="btn-group" role="group">\n    <button id="btnGroupDrop1" type="button" class="btn btn-${darkTheme?"dark":"secondary"} dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n    ${USER.channel}\n    </button>\n    <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n    <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n    </ul>\n    </div>\n    </div>`}function resetSettings(t=!1){return t&&localStorage.setItem("USER",JSON.stringify({channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""})),location.reload(),!1}async function refreshData(){darkTheme=elements.darkTheme.checked??!0}function saveSettings(){refreshData(),localStorage.setItem("darkTheme",darkTheme),localStorage.setItem("USER",JSON.stringify(USER))}function switchTheme(t){document.documentElement.setAttribute("data-bs-theme",t?"dark":"light"),document.getElementById("btnGroupDrop1")&&document.getElementById("btnGroupDrop2")&&(document.getElementById("btnGroupDrop1").classList.remove(""+(t?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop1").classList.add(""+(t?"btn-dark":"btn-secondary")),document.getElementById("btnGroupDrop2").classList.remove(""+(t?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop2").classList.add(""+(t?"btn-dark":"btn-secondary")))}function load_localStorage(){localStorage.getItem("USER")?USER=JSON.parse(localStorage.getItem("USER")):console.log("localStorage user info not found")}function connect(){elements.topRight.innerHTML='\n    <div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n    <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>\n    <ul class="dropdown-menu dropdown-menu-lg-end" aria-label="Log out">\n    <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n    </ul>\n    </div>\n    </div>',saveSettings(),loadBadges(USER.channel),loadPFP(),sendUsername("chat.vote/rps",USER.channel,"twitch"==USER.platform?`twitch - ${USER.twitchLogin}`:"youtube")}async function loadAndConnect(){if(load_localStorage(),refreshData(),USER.twitchLogin&&!await checkToken(USER.access_token))return USER.channel="",void loginExpiredModal.show();!1===USER.twitchLogin&&USER.channel?resetSettings(!0):USER.channel&&(connect(),elements.gameLink.value=`https://chat.vote/rps/play#${USER.channel||""}`)}function animateHand(t,e){elements[`${t}_rock`].style.display="",elements[`${t}_paper`].style.display="none",elements[`${t}_scissors`].style.display="none",anime({targets:`#${t}_rock`,rotate:"left"==t?-30:30,duration:300,direction:"alternate",easing:"easeOutElastic(1, .8)",loop:8,complete:function(n){elements[`${t}_rock`].style.display="none",elements[`${t}_${e}`].style.display=""}})}function randomAnimations(){let t=["rock","paper","scissors"];elements.left_rock.style.display="",elements.left_paper.style.display="none",elements.left_scissors.style.display="none",elements.right_rock.style.display="",elements.right_paper.style.display="none",elements.right_scissors.style.display="none",animateHand("left",t[Math.floor(Math.random()*t.length)]),animateHand("right",t[Math.floor(Math.random()*t.length)])}window.onload=function(){darkTheme="true"===(localStorage.getItem("darkTheme")||"true"),elements.darkTheme.checked=darkTheme??!0,switchTheme(elements.darkTheme.checked),loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),copyLinkButton=new bootstrap.Popover(elements.copyLinkButton),loadAndConnect(),elements.darkTheme.onchange=function(){switchTheme(this.checked),saveSettings()},randomAnimations()};let randomAnimationsInterval=setInterval((()=>{randomAnimations()}),4e3);function copyLink(){navigator.clipboard.writeText(`https://chat.vote/rps/play#${USER.channel||""}`),copyLinkButton.show(),setTimeout((()=>{copyLinkButton.hide()}),1e3)}