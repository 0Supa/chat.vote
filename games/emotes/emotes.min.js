const CLIENT_ID="qn0wimnszbqlwfnszdz3wwfz430eqr";let voters=[],allEmotes={twitchglobal:[],bttvglobal:[],ffzglobal:[],seventvglobal:[],twitch:[],bttv:[],ffz:[],seventv:[]},elements={grid:document.getElementById("grid"),gameDiv:document.getElementById("gameDiv"),loginExpiredModal:document.getElementById("loginExpiredModal"),loginExpiredRenew:document.getElementById("loginExpiredRenew"),loginExpiredReset:document.getElementById("loginExpiredReset"),howToPlayModal:document.getElementById("howToPlayModal"),aboutModal:document.getElementById("aboutModal"),vtsLink:document.getElementById("vtsLink"),status:document.getElementById("status"),topRight:document.getElementById("topRight"),loginButton:document.getElementById("loginButton"),channelName:document.getElementById("channelName"),connectbtn:document.getElementById("connectbtn"),darkTheme:document.getElementById("darkTheme"),toastContainer:document.getElementById("toastContainer")};const spinner='<div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div>';let loginButton,loginExpiredModal,howToPlayModal,aboutModal,darkTheme=!0,USER={channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""};async function refreshData(){darkTheme=elements.darkTheme.checked??!0,USER.twitchLogin||(USER.channel=elements.channelName.value.replace(/\s+/g,"").toLowerCase(),USER.platform="twitch"),!USER.userID&&USER.channel&&(USER.userID=await getUserID(USER.channel))}function saveSettings(){refreshData(),localStorage.setItem("USER",JSON.stringify(USER)),localStorage.setItem("darkTheme",darkTheme)}function load_localStorage(){localStorage.getItem("USER")&&(USER=JSON.parse(localStorage.getItem("USER")),elements.channelName.value=USER.channel)}function resetSettings(){return localStorage.setItem("USER",JSON.stringify({channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""})),location.reload(),!1}function login(){return elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n        <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n      </button>\n        <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n            <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n        </ul>\n    </div>\n</div>',window.open("/prompt.html","loginWindow","toolbar=0,status=0,scrollbars=0,width=500px,height=800px"),!1}async function connect(){elements.status.innerHTML='\n  <h4>\n  <span class="badge bg-warning">Connecting... \n  <div class="spinner-border" style="width:18px;height:18px;" role="status"><span class="visually-hidden">Loading...</span></div>\n  </span>\n  </h4>',elements.topRight.innerHTML='\n  <div class="btn-group" role="group" aria-label="log in button group">\n  <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n  <div class="btn-group" role="group">\n  <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>\n  <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n  <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n  </ul>\n  </div>\n  </div>',refreshData(),allEmotes.twitch=await getChannelTwitchEmotes(USER.channel,!0),allEmotes.bttv=await getChannelBTTVEmotes(USER.userID,!0),allEmotes.ffz=await getChannelFFZEmotes(USER.userID,!0),allEmotes.seventv=await getChannel7TVEmotes(USER.userID,!0),document.getElementById("twitchdesc").innerHTML=`<br>${allEmotes.twitch.length} emotes`,document.getElementById("bttvdesc").innerHTML=`<br>${allEmotes.bttv.length} emotes`,document.getElementById("ffzdesc").innerHTML=`<br>${allEmotes.ffz.length} emotes`,document.getElementById("7tvdesc").innerHTML=`<br>${allEmotes.seventv.length} emotes`;let e={options:{clientId:CLIENT_ID,debug:!1},connection:{secure:!0,reconnect:!0},channels:[USER.channel]};client=new tmi.client(e),client.on("message",(async(e,t,n,o)=>{EMOTEBENCHMARK.ebguess(t,n)})),client.on("timeout",((e,t,n,o,l)=>{})),client.on("connected",(async(e,t)=>{elements.status.innerHTML='<h4><span class="badge bg-success">Connected :)</span></h4>',saveSettings(),sendUsername("chat.vote/games/emotes",USER.channel,"twitch"==USER.platform?`twitch - ${USER.twitchLogin}`:"youtube"),await checkTags(USER.userID,USER.access_token)&&(elements.vtsLink.style.display=""),loadPFP()})),client.on("disconnected",(e=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${e}</span></h4>`})),client.on("notice",((e,t,n)=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${n}</span></h4>`})),client.connect().catch(console.error)}async function loadPFP(){if(!USER.channel)return void(elements.topRight.innerHTML=' <div class="btn-group" role="group" aria-label="login options">\n    <a\n      role="button"\n      id="loginButton"\n      class="btn btn-twitch"\n      tabindex="0"\n      data-bs-container="body"\n      data-bs-custom-class="custom-popover"\n      data-bs-placement="bottom"\n      data-bs-trigger="manual"\n      data-bs-toggle="popover"\n      data-bs-title="Not signed in"\n      data-bs-content="You need sign in first before adding options or enabling voting/suggestions"\n      ><span class="twitch-icon"></span>Sign in with Twitch</a\n    >\n    <div class="btn-group" role="group">\n      <button\n        id="btnGroupDropLogin"\n        type="button"\n        class="btn btn-twitch dropdown-toggle"\n        data-bs-toggle="dropdown"\n        data-bs-auto-close="outside"\n        aria-label="other login option, connect manually"\n        aria-expanded="false"\n      ></button>\n      <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDropLogin">\n        <div class="p-3" style="width: 300px">\n          <label for="channelName" class="form-label">Connect to chat directly</label>\n          <div class="input-group mb-3">\n            <span class="input-group-text" id="directLoginChannel">twitch.tv/</span>\n            <input type="text" class="form-control" id="channelName" aria-describedby="directLoginChannel" />\n          </div>\n          <small class="text-body-secondary">Some features will not be available if you connect directly</small><br />\n          <button type="button" id="connectbtn" class="btn btn-primary float-end">Connect</button>\n        </div>\n      </div>\n    </div>\n  </div>');let e=await get7TVPFP(USER.userID);"/pics/donk.png"==e&&USER.access_token&&(e=await getTwitchPFP(USER.channel,USER.access_token)),elements.topRight.innerHTML=`\n  <div class="btn-group" role="group" aria-label="Button group with nested dropdown">\n  <button type="button" id="btnGroupDrop2" class="btn btn-${darkTheme?"dark":"secondary"}"><img src="${e}" alt="profile pic" style="height:2em;"></button>\n  <div class="btn-group" role="group">\n  <button id="btnGroupDrop1" type="button" class="btn btn-${darkTheme?"dark":"secondary"} dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n  ${USER.channel}\n  </button>\n  <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n  <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n  </ul>\n  </div>\n  </div>`}function checkLogin(){return!!USER.channel||(loginButton.show(),setTimeout((function(){loginButton.hide()}),4e3),!1)}function logout(){elements.topRight.innerHTML=' <div class="btn-group" role="group" aria-label="login options">\n  <a\n    role="button"\n    id="loginButton"\n    class="btn btn-twitch"\n    tabindex="0"\n    data-bs-container="body"\n    data-bs-custom-class="custom-popover"\n    data-bs-placement="bottom"\n    data-bs-trigger="manual"\n    data-bs-toggle="popover"\n    data-bs-title="Not signed in"\n    data-bs-content="You need sign in first before adding options or enabling voting/suggestions"\n    ><span class="twitch-icon"></span>Sign in with Twitch</a\n  >\n  <div class="btn-group" role="group">\n    <button\n      id="btnGroupDropLogin"\n      type="button"\n      class="btn btn-twitch dropdown-toggle"\n      data-bs-toggle="dropdown"\n      data-bs-auto-close="outside"\n      aria-label="other login option, connect manually"\n      aria-expanded="false"\n    ></button>\n    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDropLogin">\n      <div class="p-3" style="width: 300px">\n        <label for="channelName" class="form-label">Connect to chat directly</label>\n        <div class="input-group mb-3">\n          <span class="input-group-text" id="directLoginChannel">twitch.tv/</span>\n          <input type="text" class="form-control" id="channelName" aria-describedby="directLoginChannel" />\n        </div>\n        <small class="text-body-secondary">Some features will not be available if you connect directly</small><br />\n        <button type="button" id="connectbtn" class="btn btn-primary float-end">Connect</button>\n      </div>\n    </div>\n  </div>\n</div>',resetSettings()}function switchTheme(e){document.documentElement.setAttribute("data-bs-theme",e?"dark":"light"),document.getElementById("twitchLogo").style.filter=`invert(${e?.25:.65})`,document.getElementById("btnGroupDrop1")&&document.getElementById("btnGroupDrop2")&&(document.getElementById("btnGroupDrop1").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop1").classList.add(""+(e?"btn-dark":"btn-secondary")),document.getElementById("btnGroupDrop2").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop2").classList.add(""+(e?"btn-dark":"btn-secondary")))}async function loadAndConnect(){load_localStorage(),refreshData();const e=new Proxy(new URLSearchParams(window.location.search),{get:(e,t)=>e.get(t)});if(e.channel&&!USER.channel&&!USER.twitchLogin&&!USER.access_token&&!USER.userID){let t=e.channel.replace(/\s+/g,"").toLowerCase();elements.channelName.value=t,USER.channel=t,window.history.replaceState({},document.title,"/")}if(USER.twitchLogin&&!await checkToken(USER.access_token))return USER.channel="",void loginExpiredModal.show();USER.channel&&connect()}function toggleGrid(){elements.grid.style.display="none"==elements.grid.style.display?"":"none",elements.gameDiv.style.display=""==elements.gameDiv.style.display?"none":""}function showHowToPlay(){howToPlayModal.show()}function switchGame(e){switch(e){case"draw":location.href="/games/draw";break;case"arena":location.href="/games/arena";break;case"eb":location.href="/games/emotes";break;case"dh":location.href="/games/donkhunt";break;case"shapes":location.href="/games/shapes";break;case"nim":location.href="/games/nim";break;case"nw":location.href="/games/wordle";break;case"c4":location.href="/games/connect4";break;case"ttt":location.href="/games/tictactoe";break;case"about":aboutModal.show();break;default:break}}window.onload=async function(){darkTheme="true"===(localStorage.getItem("darkTheme")||"true"),elements.darkTheme.checked=darkTheme??!0,switchTheme(elements.darkTheme.checked),loadAndConnect(),USER.channel||(loginButton=new bootstrap.Popover(elements.loginButton)),loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),howToPlayModal=new bootstrap.Modal(elements.howToPlayModal),aboutModal=new bootstrap.Modal(elements.aboutModal),enableTooltips(),enablePopovers(),elements.channelName.addEventListener("keydown",(e=>{"Enter"===e.key&&connect()})),elements.connectbtn.addEventListener("click",(function(){connect()})),elements.loginExpiredRenew.addEventListener("click",(function(){login()})),elements.loginButton.addEventListener("click",(function(){login()})),elements.loginExpiredReset.addEventListener("click",(function(){resetSettings()})),elements.darkTheme.onchange=function(){switchTheme(this.checked),saveSettings()},EMOTEBENCHMARK.listeners(),allEmotes.twitchglobal=await getGlobalTwitchEmotes(!0),allEmotes.bttvglobal=await getGlobalBTTVEmotes(!0),allEmotes.ffzglobal=await getGlobalFFZEmotes(!0),allEmotes.seventvglobal=await getGlobal7TVEmotes(!0),document.getElementById("twitchglobaldesc").innerHTML=`<br>${allEmotes.twitchglobal.length} emotes`,document.getElementById("bttvglobaldesc").innerHTML=`<br>${allEmotes.bttvglobal.length} emotes`,document.getElementById("ffzglobaldesc").innerHTML=`<br>${allEmotes.ffzglobal.length} emotes`,document.getElementById("7tvglobaldesc").innerHTML=`<br>${allEmotes.seventvglobal.length} emotes`},window.onbeforeunload=function(){return null};let EMOTEBENCHMARK={ebinterval:null,ebturn:0,turnlength:2e4,emoteperround:1,emotetimer:2e3,timerdecay:80,oneguess:!1,hidename:!1,bluremote:!1,ebanswer:"",qualified:[],qualifiedcurrentround:[],wrong:[],usedEmotes:[],ebtimer:null,twitchglobal:!1,bttvglobal:!1,ffzglobal:!1,seventvglobal:!1,twitch:!1,bttv:!1,ffz:!1,seventv:!1,start:function(){EMOTEBENCHMARK.emoteperround=parseInt(document.getElementById("emoteperround").value,10),EMOTEBENCHMARK.turnlength=1e3*parseInt(document.getElementById("turnlength").value,10),EMOTEBENCHMARK.emotetimer=1e3*parseInt(document.getElementById("emotetimer").value,10),EMOTEBENCHMARK.timerdecay=1e3*parseInt(document.getElementById("timerdecay").value,10),EMOTEBENCHMARK.oneguess=document.getElementById("oneguess").checked,EMOTEBENCHMARK.hidename=document.getElementById("hidename").checked,EMOTEBENCHMARK.bluremote=document.getElementById("bluremote").checked,EMOTEBENCHMARK.ebinterval||(EMOTEBENCHMARK.startebturn(),EMOTEBENCHMARK.startebtimer(),EMOTEBENCHMARK.ebinterval=setInterval(EMOTEBENCHMARK.startebturn,EMOTEBENCHMARK.turnlength))},reset:function(){clearInterval(EMOTEBENCHMARK.ebinterval),EMOTEBENCHMARK.ebinterval=null,EMOTEBENCHMARK.ebturn=0,EMOTEBENCHMARK.ebanswer="",document.getElementById("ebemotes").innerHTML="",document.getElementById("eboutput").innerHTML="",document.getElementById("timebar").style.display="none",EMOTEBENCHMARK.qualified=[],EMOTEBENCHMARK.qualifiedcurrentround=[],EMOTEBENCHMARK.twitchglobal=!1,EMOTEBENCHMARK.bttvglobal=!1,EMOTEBENCHMARK.ffzglobal=!1,EMOTEBENCHMARK.seventvglobal=!1,EMOTEBENCHMARK.twitch=!1,EMOTEBENCHMARK.bttv=!1,EMOTEBENCHMARK.ffz=!1,EMOTEBENCHMARK.seventv=!1,document.getElementById("twitchglobal").checked=!1,document.getElementById("bttvglobal").checked=!1,document.getElementById("ffzglobal").checked=!1,document.getElementById("7tvglobal").checked=!1,document.getElementById("twitch").checked=!1,document.getElementById("bttv").checked=!1,document.getElementById("ffz").checked=!1,document.getElementById("7tv").checked=!1,document.getElementById("oneguess").checked=!1,document.getElementById("hidename").checked=!1,document.getElementById("bluremote").checked=!1,document.getElementById("emoteperround").value=1,document.getElementById("emoteperroundlabel").innerHTML="1",document.getElementById("turnlength").value=20,document.getElementById("turnlengthlabel").innerHTML="20",document.getElementById("emotetimer").value=2,document.getElementById("emotetimerlabel").innerHTML="2",document.getElementById("timerdecay").value=80,document.getElementById("timerdecaylabel").innerHTML="80",EMOTEBENCHMARK.usedEmotes=[]},startebturn:function(){EMOTEBENCHMARK.ebturn++,EMOTEBENCHMARK.startebtimer();let e=[],t=[];if(EMOTEBENCHMARK.ebanswer="",document.getElementById("ebemotes").innerHTML="",EMOTEBENCHMARK.qualified=EMOTEBENCHMARK.qualifiedcurrentround,EMOTEBENCHMARK.qualifiedcurrentround=[],1==EMOTEBENCHMARK.qualified.length)return document.getElementById("eboutput").innerHTML=`Game is over. WINNER: ${EMOTEBENCHMARK.qualified.join(", ")}`,EMOTEBENCHMARK.stopebtimer(),clearInterval(EMOTEBENCHMARK.ebinterval),EMOTEBENCHMARK.ebinterval=null,void(EMOTEBENCHMARK.ebturn=0);if(document.getElementById("eboutput").innerHTML=`Qualified players: ${EMOTEBENCHMARK.qualified.join(", ")}`,0==EMOTEBENCHMARK.qualified.length&&EMOTEBENCHMARK.ebturn>1)return document.getElementById("eboutput").innerHTML="Game is over. No one won",EMOTEBENCHMARK.stopebtimer(),clearInterval(EMOTEBENCHMARK.ebinterval),EMOTEBENCHMARK.ebinterval=null,void(EMOTEBENCHMARK.ebturn=0);if(EMOTEBENCHMARK.twitchglobal&&allEmotes.twitchglobal.forEach((t=>{e.push(t)})),EMOTEBENCHMARK.bttvglobal&&allEmotes.bttvglobal.forEach((t=>{e.push(t)})),EMOTEBENCHMARK.ffzglobal&&allEmotes.ffzglobal.forEach((t=>{e.push(t)})),EMOTEBENCHMARK.seventvglobal&&allEmotes.seventvglobal.forEach((t=>{e.push(t)})),EMOTEBENCHMARK.twitch&&allEmotes.twitch.forEach((t=>{e.push(t)})),EMOTEBENCHMARK.bttv&&allEmotes.bttv.forEach((t=>{e.push(t)})),EMOTEBENCHMARK.ffz&&allEmotes.ffz.forEach((t=>{e.push(t)})),EMOTEBENCHMARK.seventv&&allEmotes.seventv.forEach((t=>{e.push(t)})),EMOTEBENCHMARK.usedEmotes.forEach((t=>{e=e.filter((e=>e.name!=t))})),e.length<5)return EMOTEBENCHMARK.stopebtimer(),document.getElementById("timebar").style.display="none",clearInterval(EMOTEBENCHMARK.ebinterval),EMOTEBENCHMARK.ebinterval=null,EMOTEBENCHMARK.ebturn=0,void showToast("Not enough emotes remaining.","warning",5e3);for(let n=0;n<EMOTEBENCHMARK.emoteperround;n++)t.push(e[Math.floor(Math.random()*e.length)]),t.forEach((e=>{EMOTEBENCHMARK.usedEmotes.push(e.name)}));document.getElementById("ebemotes").style.opacity=0;for(let e=0;e<t.length;e++){let n="";EMOTEBENCHMARK.hidename||(n=`<div class="text-body-secondary text-center">${t[e].name}</div>`),document.getElementById("ebemotes").innerHTML+=`<div class="border border-secondary emote">\n            <img src="${t[e].url}" alt="${t[e].name}" title="${t[e].name}">\n            ${n}\n            </div>`,EMOTEBENCHMARK.ebanswer+=`${t[e].name} `}document.getElementById("eboutput").innerHTML="Qualified players:",document.getElementById("timebar").style.display="block",document.getElementById("timebar").style.width="100%",setTimeout((()=>{document.getElementById("ebemotes").style.opacity=1,$("#timebar").animate({width:"0px"},EMOTEBENCHMARK.emotetimer-100*EMOTEBENCHMARK.ebturn)}),2e3),setTimeout((()=>{document.getElementById("ebemotes").style.opacity=0}),2e3+EMOTEBENCHMARK.emotetimer-100*EMOTEBENCHMARK.ebturn)},ebguess:function(e,t){let n=!1;switch(EMOTEBENCHMARK.ebdifficulty){case 4:case 5:n=!0;break;default:break}n?voters.includes(e.username)||(voters.push(e.username),EMOTEBENCHMARK.ebanswer.trim()):t==EMOTEBENCHMARK.ebanswer.trim()&&((EMOTEBENCHMARK.qualified.includes(e.username)||1==EMOTEBENCHMARK.ebturn)&&(EMOTEBENCHMARK.qualifiedcurrentround.includes(e.username)||EMOTEBENCHMARK.qualifiedcurrentround.push(e.username)),document.getElementById("eboutput").innerHTML=`Qualified players: ${EMOTEBENCHMARK.qualifiedcurrentround.join(", ")}`)},startebtimer:function(){document.getElementById("ebtimer").style.display="",EMOTEBENCHMARK.ebtimer&&EMOTEBENCHMARK.ebtimer.isRunning()&&(EMOTEBENCHMARK.ebtimer.reset(),EMOTEBENCHMARK.ebtimer.stop()),isNaN(EMOTEBENCHMARK.turnlength)||0!=EMOTEBENCHMARK.turnlength&&(EMOTEBENCHMARK.ebtimer=new easytimer.Timer,EMOTEBENCHMARK.ebtimer.addEventListener("secondTenthsUpdated",(function(e){document.querySelector("#ebtimer .values").innerHTML="Round ends in "+EMOTEBENCHMARK.ebtimer.getTimeValues().toString(["minutes","seconds","secondTenths"])})),EMOTEBENCHMARK.ebtimer.addEventListener("targetAchieved",(function(e){document.querySelector("#ebtimer .values").innerHTML=`Round #${EMOTEBENCHMARK.ebturn} starting...`,EMOTEBENCHMARK.ebtimer.reset(),EMOTEBENCHMARK.ebtimer.stop()})),document.querySelector("#ebtimer .values").innerHTML=`Round #${EMOTEBENCHMARK.ebturn} starting...`,setTimeout((()=>{EMOTEBENCHMARK.ebtimer.start({countdown:!0,precision:"secondTenths",startValues:{seconds:EMOTEBENCHMARK.turnlength/1e3-2}})}),2e3))},stopebtimer:function(){EMOTEBENCHMARK.ebtimer&&EMOTEBENCHMARK.ebtimer.isRunning()&&(EMOTEBENCHMARK.ebtimer.reset(),EMOTEBENCHMARK.ebtimer.stop()),document.getElementById("ebtimer").style.display="none"},listeners:function(){document.getElementById("twitchglobal").onchange=function(){EMOTEBENCHMARK.twitchglobal=this.checked},document.getElementById("bttvglobal").onchange=function(){EMOTEBENCHMARK.bttvglobal=this.checked},document.getElementById("ffzglobal").onchange=function(){EMOTEBENCHMARK.ffzglobal=this.checked},document.getElementById("7tvglobal").onchange=function(){EMOTEBENCHMARK.seventvglobal=this.checked},document.getElementById("twitch").onchange=function(){EMOTEBENCHMARK.twitch=this.checked},document.getElementById("bttv").onchange=function(){EMOTEBENCHMARK.bttv=this.checked},document.getElementById("ffz").onchange=function(){EMOTEBENCHMARK.ffz=this.checked},document.getElementById("7tv").onchange=function(){EMOTEBENCHMARK.seventv=this.checked},document.getElementById("emoteperround").oninput=function(){document.getElementById("emoteperroundlabel").innerHTML=this.value},document.getElementById("turnlength").oninput=function(){document.getElementById("turnlengthlabel").innerHTML=this.value},document.getElementById("emotetimer").oninput=function(){document.getElementById("emotetimerlabel").innerHTML=this.value},document.getElementById("timerdecay").oninput=function(){document.getElementById("timerdecaylabel").innerHTML=this.value}}};