const CLIENT_ID="qn0wimnszbqlwfnszdz3wwfz430eqr";let elements={grid:document.getElementById("grid"),gameDiv:document.getElementById("gameDiv"),loginExpiredModal:document.getElementById("loginExpiredModal"),loginExpiredRenew:document.getElementById("loginExpiredRenew"),loginExpiredReset:document.getElementById("loginExpiredReset"),aboutModal:document.getElementById("aboutModal"),vtsLink:document.getElementById("vtsLink"),status:document.getElementById("status"),topRight:document.getElementById("topRight"),loginButton:document.getElementById("loginButton"),channelName:document.getElementById("channelName"),connectbtn:document.getElementById("connectbtn"),darkTheme:document.getElementById("darkTheme"),toastContainer:document.getElementById("toastContainer")};const spinner='<div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div>';let loginButton,loginExpiredModal,aboutModal,darkTheme=!0,USER={channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""};function refreshData(){darkTheme=elements.darkTheme.checked??!0,USER.twitchLogin||(USER.channel=elements.channelName.value.replace(/\s+/g,"").toLowerCase(),USER.platform="twitch")}function saveSettings(){refreshData(),localStorage.setItem("USER",JSON.stringify(USER)),localStorage.setItem("darkTheme",darkTheme)}function load_localStorage(){localStorage.getItem("USER")&&(USER=JSON.parse(localStorage.getItem("USER")),elements.channelName.value=USER.channel)}function resetSettings(){return localStorage.setItem("USER",JSON.stringify({channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""})),location.reload(),!1}function login(){return elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n        <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n      </button>\n        <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n            <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n        </ul>\n    </div>\n</div>',window.open("/prompt.html","loginWindow","toolbar=0,status=0,scrollbars=0,width=500px,height=800px"),!1}function connect(){elements.status.innerHTML='\n  <h4>\n  <span class="badge bg-warning">Connecting... \n  <div class="spinner-border" style="width:18px;height:18px;" role="status"><span class="visually-hidden">Loading...</span></div>\n  </span>\n  </h4>',elements.topRight.innerHTML='\n  <div class="btn-group" role="group" aria-label="log in button group">\n  <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n  <div class="btn-group" role="group">\n  <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>\n  <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n  <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n  </ul>\n  </div>\n  </div>',refreshData();let e={options:{clientId:CLIENT_ID,debug:!1},connection:{secure:!0,reconnect:!0},channels:[USER.channel]};client=new tmi.client(e),client.on("message",(async(e,n,t,a)=>{let o=t.split(" ").filter(Boolean);if("!join"==o[0]&&o[1]||"DonkRogue"==o[0]||"DonkHunter"==o[0]||"DonkMage"==o[0]||"DonkPaladin"==o[0]||"DonkPriest"==o[0]||"DonkShaman"==o[0]){let e="";if(e="!join"==o[0]?o[1].toLowerCase():o[0],arena.aux.findUnitByName(n.username))return;switch(e){case"rogue":case"DonkRogue":arena.aux.addUnit(n.username,n.color||"#FFFFFF","rogue");break;case"hunter":case"DonkHunter":arena.aux.addUnit(n.username,n.color||"#FFFFFF","hunter");break;case"mage":case"DonkMage":arena.aux.addUnit(n.username,n.color||"#FFFFFF","mage");break;case"paladin":case"DonkPaladin":arena.aux.addUnit(n.username,n.color||"#FFFFFF","paladin");break;case"priest":case"DonkPriest":arena.aux.addUnit(n.username,n.color||"#FFFFFF","priest");break;case"shaman":case"DonkShaman":arena.aux.addUnit(n.username,n.color||"#FFFFFF","shaman");break;default:break}}})),client.on("timeout",((e,n,t,a,o)=>{})),client.on("connected",(async(e,n)=>{elements.status.innerHTML='<h4><span class="badge bg-success">Connected :)</span></h4>',saveSettings(),sendUsername("chat.vote/games/arena",USER.channel,"twitch"==USER.platform?`twitch - ${USER.twitchLogin}`:"youtube"),await checkTags(USER.userID,USER.access_token)&&(elements.vtsLink.style.display=""),loadPFP()})),client.on("disconnected",(e=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${e}</span></h4>`})),client.on("notice",((e,n,t)=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${t}</span></h4>`})),client.connect().catch(console.error)}async function loadPFP(){if(!USER.channel)return void(elements.topRight.innerHTML=' <div class="btn-group" role="group" aria-label="login options">\n    <a\n      role="button"\n      id="loginButton"\n      class="btn btn-twitch"\n      tabindex="0"\n      data-bs-container="body"\n      data-bs-custom-class="custom-popover"\n      data-bs-placement="bottom"\n      data-bs-trigger="manual"\n      data-bs-toggle="popover"\n      data-bs-title="Not signed in"\n      data-bs-content="You need sign in first before adding options or enabling voting/suggestions"\n      ><span class="twitch-icon"></span>Sign in with Twitch</a\n    >\n    <div class="btn-group" role="group">\n      <button\n        id="btnGroupDropLogin"\n        type="button"\n        class="btn btn-twitch dropdown-toggle"\n        data-bs-toggle="dropdown"\n        data-bs-auto-close="outside"\n        aria-label="other login option, connect manually"\n        aria-expanded="false"\n      ></button>\n      <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDropLogin">\n        <div class="p-3" style="width: 300px">\n          <label for="channelName" class="form-label">Connect to chat directly</label>\n          <div class="input-group mb-3">\n            <span class="input-group-text" id="directLoginChannel">twitch.tv/</span>\n            <input type="text" class="form-control" id="channelName" aria-describedby="directLoginChannel" />\n          </div>\n          <small class="text-body-secondary">Some features will not be available if you connect directly</small><br />\n          <button type="button" id="connectbtn" class="btn btn-primary float-end">Connect</button>\n        </div>\n      </div>\n    </div>\n  </div>');let e=await get7TVPFP(USER.userID);"/pics/donk.png"==e&&USER.access_token&&(e=await getTwitchPFP(USER.channel,USER.access_token)),elements.topRight.innerHTML=`\n  <div class="btn-group" role="group" aria-label="Button group with nested dropdown">\n  <button type="button" id="btnGroupDrop2" class="btn btn-${darkTheme?"dark":"secondary"}"><img src="${e}" alt="profile pic" style="height:2em;"></button>\n  <div class="btn-group" role="group">\n  <button id="btnGroupDrop1" type="button" class="btn btn-${darkTheme?"dark":"secondary"} dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n  ${USER.channel}\n  </button>\n  <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n  <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n  </ul>\n  </div>\n  </div>`}function checkLogin(){return!!USER.channel||(loginButton.show(),setTimeout((function(){loginButton.hide()}),4e3),!1)}function logout(){elements.topRight.innerHTML=' <div class="btn-group" role="group" aria-label="login options">\n  <a\n    role="button"\n    id="loginButton"\n    class="btn btn-twitch"\n    tabindex="0"\n    data-bs-container="body"\n    data-bs-custom-class="custom-popover"\n    data-bs-placement="bottom"\n    data-bs-trigger="manual"\n    data-bs-toggle="popover"\n    data-bs-title="Not signed in"\n    data-bs-content="You need sign in first before adding options or enabling voting/suggestions"\n    ><span class="twitch-icon"></span>Sign in with Twitch</a\n  >\n  <div class="btn-group" role="group">\n    <button\n      id="btnGroupDropLogin"\n      type="button"\n      class="btn btn-twitch dropdown-toggle"\n      data-bs-toggle="dropdown"\n      data-bs-auto-close="outside"\n      aria-label="other login option, connect manually"\n      aria-expanded="false"\n    ></button>\n    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDropLogin">\n      <div class="p-3" style="width: 300px">\n        <label for="channelName" class="form-label">Connect to chat directly</label>\n        <div class="input-group mb-3">\n          <span class="input-group-text" id="directLoginChannel">twitch.tv/</span>\n          <input type="text" class="form-control" id="channelName" aria-describedby="directLoginChannel" />\n        </div>\n        <small class="text-body-secondary">Some features will not be available if you connect directly</small><br />\n        <button type="button" id="connectbtn" class="btn btn-primary float-end">Connect</button>\n      </div>\n    </div>\n  </div>\n</div>',resetSettings()}function switchTheme(e){document.documentElement.setAttribute("data-bs-theme",e?"dark":"light"),document.getElementById("twitchLogo").style.filter=`invert(${e?.25:.65})`,document.getElementById("btnGroupDrop1")&&document.getElementById("btnGroupDrop2")&&(document.getElementById("btnGroupDrop1").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop1").classList.add(""+(e?"btn-dark":"btn-secondary")),document.getElementById("btnGroupDrop2").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop2").classList.add(""+(e?"btn-dark":"btn-secondary")))}async function loadAndConnect(){load_localStorage(),refreshData();const e=new Proxy(new URLSearchParams(window.location.search),{get:(e,n)=>e.get(n)});if(e.channel&&!USER.channel&&!USER.twitchLogin&&!USER.access_token&&!USER.userID){let n=e.channel.replace(/\s+/g,"").toLowerCase();elements.channelName.value=n,USER.channel=n,window.history.replaceState({},document.title,"/")}if(USER.twitchLogin&&!await checkToken(USER.access_token))return USER.channel="",void loginExpiredModal.show();USER.channel&&connect()}function toggleGrid(){elements.grid.style.display="none"==elements.grid.style.display?"":"none",elements.gameDiv.style.display=""==elements.gameDiv.style.display?"none":""}window.onload=function(){darkTheme="true"===(localStorage.getItem("darkTheme")||"true"),elements.darkTheme.checked=darkTheme??!0,switchTheme(elements.darkTheme.checked),loadAndConnect(),USER.channel||(loginButton=new bootstrap.Popover(elements.loginButton)),loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),aboutModal=new bootstrap.Modal(elements.aboutModal),enableTooltips(),enablePopovers(),elements.channelName.addEventListener("keydown",(e=>{"Enter"===e.key&&connect()})),elements.connectbtn.addEventListener("click",(function(){connect()})),elements.loginExpiredRenew.addEventListener("click",(function(){login()})),elements.loginButton.addEventListener("click",(function(){login()})),elements.loginExpiredReset.addEventListener("click",(function(){resetSettings()})),elements.darkTheme.onchange=function(){switchTheme(this.checked),saveSettings()}},window.onbeforeunload=function(){return null};let arenaSetup={chatters:[],params:{showUnitNames:!0,unitScale:.75,exponentialSoundLevels:!0,notify:!0,notifyDuration:3333,killfeed:!0,killFeedDuration:3333,killFeedHardLimit:69,width:1280,height:720,style:"",parent:"div#game"},settings:{goFullscreenOnStart:!1,exitFullscreenOnEnd:!1,unitLimit:999,allowNewUnitsAfterStart:!1,playerCanWalkWhileFreezeTime:!1,music:!0,musicVolume:.3,sound:!0,soundVolume:.6},resources:{image:{sky:"/games/pics/arena-bg.png",ground:"/games/pics/arena-longbar.png","fs-in":"/games/pics/go-fullscreen.png","fs-out":"/games/pics/exit-fullscreen.png","icon-blink":"/games/pics/icon-blink.png","icon-grenade":"/games/pics/icon-grenade.png","icon-heal":"/games/pics/icon-heal.png","icon-meteor":"/games/pics/icon-meteor.png","icon-summon":"/games/pics/icon-summon.png","icon-repel":"/games/pics/icon-repel.png",rogue:"/games/pics/donk-rogue.png",hunter:"/games/pics/donk-hunter.png",mage:"/games/pics/donk-mage.png",paladin:"/games/pics/donk-paladin.png",priest:"/games/pics/donk-priest.png",shaman:"/games/pics/donk-shaman.png",dummy:"/games/pics/megalul.png"},audio:{"dummy-attack":"/games/arena/audio/rogue-attack.mp3","dummy-hit":"/games/arena/audio/rogue-hit.mp3","rogue-attack":"/games/arena/audio/rogue-attack.mp3","hunter-attack":"/games/arena/audio/hunter-attack.mp3","mage-attack":"/games/arena/audio/mage-attack.mp3","rogue-hit":"/games/arena/audio/rogue-hit.mp3","hunter-hit":"/games/arena/audio/hunter-hit.mp3","mage-hit":"/games/arena/audio/mage-hit.mp3","paladin-attack":"/games/arena/audio/paladin-attack.mp3","paladin-hit":"/games/arena/audio/paladin-hit.mp3","priest-attack":"/games/arena/audio/priest-attack.mp3","priest-hit":"/games/arena/audio/priest-hit.mp3","shaman-attack":"/games/arena/audio/mage-attack.mp3","shaman-hit":"/games/arena/audio/mage-hit.mp3","unit-death":"/games/arena/audio/unit-death.mp3",heal:"/games/arena/audio/heal.mp3",blink:"/games/arena/audio/blink.mp3",grenade:"/games/arena/audio/grenade.mp3","grenade-explode":"/games/arena/audio/grenade-impact.mp3",meteor:"/games/arena/audio/meteor.mp3",repel:"/games/arena/audio/repel.mp3","arena-ost":{resources:["/games/arena/audio/arena-ost-full.mp3"],spritemap:{"ost-main-begin":{start:123.4,end:136.303,loop:!1},"ost-main-loop":{start:136.303,end:148.15,loop:!0},"ost-suspense-begin":{start:171.58,end:171.93,loop:!1},"ost-suspense-loop":{start:171.93,end:189.72,loop:!0},"ost-finale-begin":{start:189.72,end:189.72,loop:!1},"ost-finale-loop":{start:189.72,end:201.58,loop:!0}}},"arena-end":"/games/arena/audio/arena-end.mp3"},spritesheet:{"hit-melee":["/games/pics/hit-melee.png",{frameWidth:32,frameHeight:32}],"hit-bullet":["/games/pics/hit-bullet.png",{frameWidth:16,frameHeight:16}],"hit-fireball":["/games/pics/hit-fireball.png",{frameWidth:32,frameHeight:32}],"hit-weakmagic":["/games/pics/hit-weakmagic.png",{frameWidth:24,frameHeight:24}],"abil-blink":["/games/pics/blink2.png",{frameWidth:64,frameHeight:64}],"abil-grenade":["/games/pics/grenade-flying.png",{frameWidth:16,frameHeight:16}],meteor:["/games/pics/meteor.png",{frameWidth:64,frameHeight:64}],"meteor-smoke":["/games/pics/meteor-smoke.png",{frameWidth:64,frameHeight:64}],explosion:["/games/pics/explosion.png",{frameWidth:128,frameHeight:128}]}},callbacks:{arenaStart:()=>{},unitDied:(e,n,t)=>{},arenaEnd:e=>{},arenaRestart:()=>{}},reset:function(){arena.aux.resetArena(),html.startBtn.disabled=!1,html.streamerRogue.disabled=!1,html.streamerHunter.disabled=!1,html.streamerMage.disabled=!1,html.streamerPaladin.disabled=!1,html.streamerPriest.disabled=!1,html.streamerShaman.disabled=!1,html.addBotBtn.disabled=!1,html.bulkAddBotBtn.disabled=!1}};const html={killfeed:document.querySelector("#killfeed"),autoFullscreenInput:document.querySelector("input#bAutoFullscreen"),teamModeInput:document.querySelector("input#bTeamMode"),streamerRogue:document.querySelector("button#streamerRogue"),streamerHunter:document.querySelector("button#streamerHunter"),streamerMage:document.querySelector("button#streamerMage"),streamerPaladin:document.querySelector("button#streamerPaladin"),streamerPriest:document.querySelector("button#streamerPriest"),streamerShaman:document.querySelector("button#streamerShaman"),startBtn:document.querySelector("button#bStartGame"),addBotBtn:document.querySelector("button#bAddBot"),bulkAddBotBtn:document.querySelector("button#bAddBots"),addPassiveBotBtn:document.querySelector("button#bAddDummies"),cleanUpBtn:document.querySelector("button#bCleanUp")};html.startBtn.addEventListener("click",(()=>{try{arena.aux.startArena(),html.startBtn.disabled=!0,html.streamerRogue.disabled=!0,html.streamerHunter.disabled=!0,html.streamerMage.disabled=!0,html.streamerPaladin.disabled=!0,html.streamerPriest.disabled=!0,html.streamerShaman.disabled=!0}catch(e){showToast(e,"warning",3e3)}})),html.addBotBtn.addEventListener("click",(()=>{let e=document.querySelector("input#sBotName").value.trim();document.querySelector("input#sBotName").value="";let n=document.querySelector("select#sBotClass").value.toLowerCase();try{let t=Math.round(Math.random())?"yellow":null;arena.aux.addUnit(e,t,n)}catch(e){showToast(e,"warning",3e3)}})),html.bulkAddBotBtn.addEventListener("click",(()=>{let e=parseInt(document.getElementById("botsNumber").value,10);if(!isNaN(e))for(arena.settings.unitLimit&&e>arena.settings.unitLimit&&(showToast("You've requested too many units! \nWill spawn as many as possible instead.","warning",6e3),e=arena.settings.unitLimit);e>0;){e-=1;try{arena.aux.addUnit()}catch(e){}}})),html.autoFullscreenInput.addEventListener("change",(e=>{arena.settings.exitFullscreenOnEnd=e.target.checked,arena.settings.goFullscreenOnStart=e.target.checked})),html.cleanUpBtn.addEventListener("click",(()=>{arena.aux.resetArena(),html.startBtn.disabled=!1,html.streamerRogue.disabled=!1,html.streamerHunter.disabled=!1,html.streamerMage.disabled=!1,html.streamerPaladin.disabled=!1,html.streamerPriest.disabled=!1,html.streamerShaman.disabled=!1})),html.streamerRogue.addEventListener("click",(()=>{arena.player&&(arena.player.destroy(),arena.player=null);try{arena.aux.addPlayer(USER.channel,"#FF0000","rogue")}catch(e){showToast(e,"warning",3e3)}})),html.streamerHunter.addEventListener("click",(()=>{arena.player&&(arena.player.destroy(),arena.player=null);try{arena.aux.addPlayer(USER.channel,"#FF0000","hunter")}catch(e){showToast(e,"warning",3e3)}})),html.streamerMage.addEventListener("click",(()=>{arena.player&&(arena.player.destroy(),arena.player=null);try{arena.aux.addPlayer(USER.channel,"#FF0000","mage")}catch(e){showToast(e,"warning",3e3)}})),html.streamerPaladin.addEventListener("click",(()=>{arena.player&&(arena.player.destroy(),arena.player=null);try{arena.aux.addPlayer(USER.channel,"#FF0000","paladin")}catch(e){showToast(e,"warning",3e3)}})),html.streamerPriest.addEventListener("click",(()=>{arena.player&&(arena.player.destroy(),arena.player=null);try{arena.aux.addPlayer(USER.channel,"#FF0000","priest")}catch(e){showToast(e,"warning",3e3)}})),html.streamerShaman.addEventListener("click",(()=>{arena.player&&(arena.player.destroy(),arena.player=null);try{arena.aux.addPlayer(USER.channel,"#FF0000","shaman")}catch(e){showToast(e,"warning",3e3)}})),document.querySelector("#sSound").addEventListener("input",(e=>{arena.settings.soundVolume=e.target.value/100,document.getElementById("sSoundlabel").innerHTML=e.target.value})),document.querySelector("#sMusic").addEventListener("input",(e=>{arena.settings.musicVolume=e.target.value/100,document.getElementById("sMusiclabel").innerHTML=e.target.value})),html.teamModeInput.addEventListener("change",(e=>{arena.aux.toggleTeamMode(e.target.checked)})),arenaSetup.callbacks.unitDied=(e,n,t)=>{const a=document.createElement("div");a.classList.add("killfeed-line"),a.innerHTML=`\n    <span style="color: ${n?n.color:"white"};">${n?n.name:""}</span>\n    <span style="color: white;">${t}</span>\n    <span style="color: ${e?e.color:"white"};">${e?e.name:""}</span>`,html.killfeed.appendChild(a),setTimeout((()=>a.remove()),3e3)},arenaSetup.callbacks.arenaEnd=e=>{document.querySelectorAll("div#controls > div.control-line").forEach((e=>e.style.display=""))},arenaSetup.callbacks.arenaRestart=()=>{arenaBetterAi.initialize(arena)};