const CLIENT_ID="qn0wimnszbqlwfnszdz3wwfz430eqr";let elements={loginExpiredModal:document.getElementById("loginExpiredModal"),loginExpiredRenew:document.getElementById("loginExpiredRenew"),loginExpiredReset:document.getElementById("loginExpiredReset"),deleteBracketModal:document.getElementById("deleteBracketModal"),deleteBracketModalBody:document.getElementById("deleteBracketModalBody"),deleteBracketButton:document.getElementById("deleteBracketButton"),quitBracketModal:document.getElementById("quitBracketModal"),tierlistEditorModal:document.getElementById("tierlistEditorModal"),tierlistEditor:document.getElementById("tierlistEditor"),previewModal:document.getElementById("previewModal"),previewModalBody:document.getElementById("previewModalBody"),generateModal:document.getElementById("generateModal"),generateBracketType:document.getElementById("generateBracketType"),spotifyplaylistSettings:document.getElementById("spotifyplaylistSettings"),tiermakerSettings:document.getElementById("tiermakerSettings"),clipsSettings:document.getElementById("clipsSettings"),emotesSettings:document.getElementById("emotesSettings"),uwufufuSettings:document.getElementById("uwufufuSettings"),ytchannelSettings:document.getElementById("ytchannelSettings"),ytplaylistSettings:document.getElementById("ytplaylistSettings"),spotifyPlaylistLink:document.getElementById("spotifyPlaylistLink"),spotifyPlaylistPreview:document.getElementById("spotifyPlaylistPreview"),tiermakerLink:document.getElementById("tiermakerLink"),tiermakerPreview:document.getElementById("tiermakerPreview"),clipsChannel:document.getElementById("clipsChannel"),clipsPreview:document.getElementById("clipsPreview"),emotesChannel:document.getElementById("emotesChannel"),emotesPreview:document.getElementById("emotesPreview"),uwufufuLink:document.getElementById("uwufufuLink"),uwufufuPreview:document.getElementById("uwufufuPreview"),ytchannelLink:document.getElementById("ytchannelLink"),ytchannelPreview:document.getElementById("ytchannelPreview"),ytplaylistLink:document.getElementById("ytplaylistLink"),ytplaylistPreview:document.getElementById("ytplaylistPreview"),browseModal:document.getElementById("browseModal"),browseModalBody:document.getElementById("browseModalBody"),startModal:document.getElementById("startModal"),formatSelect:document.getElementById("formatSelect"),optionLimit:document.getElementById("optionLimit"),changeCommand:document.getElementById("changeCommand"),keepVotingEnabled:document.getElementById("keepVotingEnabled"),disableAnimations:document.getElementById("disableAnimations"),spotifyWarning:document.getElementById("spotifyWarning"),vtsLink:document.getElementById("vtsLink"),status:document.getElementById("status"),topRight:document.getElementById("topRight"),loginButton:document.getElementById("loginButton"),channelName:document.getElementById("channelName"),connectbtn:document.getElementById("connectbtn"),darkTheme:document.getElementById("darkTheme"),myBrackets:document.getElementById("myBrackets"),createBracket:document.getElementById("createBracket"),importBracket:document.getElementById("importBracket"),browseBracket:document.getElementById("browseBracket"),bracketEditor:document.getElementById("bracketEditor"),bracketEditorHeader:document.getElementById("bracketEditorHeader"),bracketTitle:document.getElementById("bracketTitle"),bracketDescription:document.getElementById("bracketDescription"),optionContainer:document.getElementById("optionContainer"),addOption:document.getElementById("addOption"),toastContainer:document.getElementById("toastContainer"),bracket:document.getElementById("bracket"),brackets_editor:document.getElementById("brackets_editor"),pickWinner:document.getElementById("pickWinner"),hideScore:document.getElementById("hideScore"),hideScoreIcon:document.getElementById("hideScoreIcon"),title:document.getElementById("title"),round:document.getElementById("round"),left_container:document.getElementById("left_container"),right_container:document.getElementById("right_container"),left_title:document.getElementById("left_title"),right_title:document.getElementById("right_title"),left_card:document.getElementById("left_card"),right_card:document.getElementById("right_card"),left_card_zoom_icon:document.getElementById("left_card_zoom_icon"),right_card_zoom_icon:document.getElementById("right_card_zoom_icon"),left_name:document.getElementById("left_name"),right_name:document.getElementById("right_name"),left_score:document.getElementById("left_score"),right_score:document.getElementById("right_score"),left_command:document.getElementById("left_command"),right_command:document.getElementById("right_command"),left_value:document.getElementById("left_value"),right_value:document.getElementById("right_value"),left_info:document.getElementById("left_info"),right_info:document.getElementById("right_info"),controls:document.getElementById("controls"),enableVoting:document.getElementById("enableVoting"),enableVotingTierlist:document.getElementById("enableVotingTierlist"),end:document.getElementById("end"),endTitle:document.getElementById("endTitle"),winner_name:document.getElementById("winner_name"),winner_value:document.getElementById("winner_value"),endControls:document.getElementById("endControls"),tierlist:document.getElementById("tierlist"),tierlistContainer:document.getElementById("tierlistContainer"),upcoming:document.getElementById("upcoming"),upcoming_images:document.getElementById("upcoming_images"),tierlistItem:document.getElementById("tierlistItem"),tierlistItemDrag:document.getElementById("tierlistItemDrag"),tierlistLabels:document.getElementById("tierlistLabels"),tierlistScores:document.getElementById("tierlistScores"),currentTierlistItemName:document.getElementById("currentTierlistItemName"),currentTierlistItem:document.getElementById("currentTierlistItem"),pickWinnerTierlist:document.getElementById("pickWinnerTierlist"),hideScoreTierlist:document.getElementById("hideScoreTierlist"),hideScoreTierlistIcon:document.getElementById("hideScoreTierlistIcon")};const icons={text:'<i class="material-icons notranslate">description</i>',image:'<i class="material-icons notranslate">image</i>',youtube:'<i class="material-icons notranslate">play_arrow</i>',twitch:'<i class="material-icons notranslate">movie_creation</i>',spotify:'<i class="material-icons notranslate">audiotrack</i>'},spinner='<div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div>',spotifyURLRegex=/https?:\/\/(?:embed\.|open\.)(?:spotify\.com\/)(?:(album|track|playlist)\/|\?uri=spotify:track:)((\w|-){22})/;let client,loginButton,loginExpiredModal,deleteBracketModal,quitBracketModal,tierlistEditorModal,previewModal,generateModal,browseModal,startModal,votePopover,votePopoverTierlist,startID,darkTheme=!0,currentBracket={},currentTierlist={},currentFormat="single",voters=[],voting_enabled=!1,currentTime=0,vote_results={left:0,right:0},USER={channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""},BRACKETS={brackets:[]};function resetSettings(){return localStorage.setItem("USER",JSON.stringify({channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""})),localStorage.setItem("BRACKETS",JSON.stringify({brackets:[]})),location.reload(),!1}async function refreshData(){darkTheme=elements.darkTheme.checked??!0,USER.twitchLogin||(USER.channel=validator.escape(elements.channelName.value.replace(/\s+/g,"").toLowerCase()),USER.platform="twitch"),!USER.userID&&USER.channel&&(USER.userID=await getUserID(USER.channel))}function saveSettings(){refreshData(),localStorage.setItem("USER",JSON.stringify(USER)),localStorage.setItem("BRACKETS",JSON.stringify(BRACKETS)),localStorage.setItem("darkTheme",darkTheme)}async function loadAndConnect(){load_localStorage(),refreshData();const e=new Proxy(new URLSearchParams(window.location.search),{get:(e,t)=>e.get(t)});if(e.channel&&!USER.channel&&!USER.twitchLogin&&!USER.access_token&&!USER.userID){let t=e.channel.replace(/\s+/g,"").toLowerCase();elements.channelName.value=t,USER.channel=t,window.history.replaceState({},document.title,"/")}if(USER.twitchLogin&&!await checkToken(USER.access_token))return USER.channel="",void loginExpiredModal.show();USER.channel&&connect()}function load_localStorage(){localStorage.getItem("USER")&&(USER=JSON.parse(localStorage.getItem("USER")),elements.channelName.value=USER.channel),localStorage.getItem("BRACKETS")&&(BRACKETS=JSON.parse(localStorage.getItem("BRACKETS")),loadBrackets())}async function loadPFP(){if(!USER.channel)return void(elements.topRight.innerHTML=' <div class="btn-group" role="group" aria-label="login options">\n      <a\n        role="button"\n        id="loginButton"\n        class="btn btn-twitch"\n        tabindex="0"\n        data-bs-container="body"\n        data-bs-custom-class="custom-popover"\n        data-bs-placement="bottom"\n        data-bs-trigger="manual"\n        data-bs-toggle="popover"\n        data-bs-title="Not signed in"\n        data-bs-content="You need sign in first"\n        ><span class="twitch-icon"></span>Sign in with Twitch</a\n      >\n      <div class="btn-group" role="group">\n        <button\n          id="btnGroupDropLogin"\n          type="button"\n          class="btn btn-twitch dropdown-toggle"\n          data-bs-toggle="dropdown"\n          data-bs-auto-close="outside"\n          aria-label="other login option, connect manually"\n          aria-expanded="false"\n        ></button>\n        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDropLogin">\n          <div class="p-3" style="width: 300px">\n            <label for="channelName" class="form-label">Connect to chat directly</label>\n            <div class="input-group mb-3">\n              <span class="input-group-text" id="directLoginChannel">twitch.tv/</span>\n              <input type="text" class="form-control" id="channelName" aria-describedby="directLoginChannel" />\n            </div>\n            <small class="text-body-secondary">Some features will not be available if you connect directly</small><br />\n            <button type="button" id="connectbtn" class="btn btn-primary float-end">Connect</button>\n          </div>\n        </div>\n      </div>\n    </div>');let e=await get7TVPFP(USER.userID);"/pics/donk.png"==e&&USER.access_token&&(e=await getTwitchPFP(USER.channel,USER.access_token)),elements.topRight.innerHTML=`\n    <div class="btn-group" role="group" aria-label="Button group with nested dropdown">\n    <button type="button" id="btnGroupDrop2" class="btn btn-${darkTheme?"dark":"secondary"}"><img src="${e}" alt="profile pic" style="height:2em;"></button>\n    <div class="btn-group" role="group">\n    <button id="btnGroupDrop1" type="button" class="btn btn-${darkTheme?"dark":"secondary"} dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n    ${USER.channel}\n    </button>\n    <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n    <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n    </ul>\n    </div>\n    </div>`}function login(){return elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n      <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n      <div class="btn-group" role="group">\n          <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n        </button>\n          <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDropLogin">\n              <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n          </ul>\n      </div>\n  </div>',window.open("/prompt.html","loginWindow","toolbar=0,status=0,scrollbars=0,width=500px,height=800px"),!1}function checkLogin(){return!!USER.channel||(loginButton.show(),setTimeout((function(){loginButton.hide()}),4e3),!1)}function logout(){elements.topRight.innerHTML=' <div class="btn-group" role="group" aria-label="login options">\n    <a\n      role="button"\n      id="loginButton"\n      class="btn btn-twitch"\n      tabindex="0"\n      data-bs-container="body"\n      data-bs-custom-class="custom-popover"\n      data-bs-placement="bottom"\n      data-bs-trigger="manual"\n      data-bs-toggle="popover"\n      data-bs-title="Not signed in"\n      data-bs-content="You need sign in first"\n      ><span class="twitch-icon"></span>Sign in with Twitch</a\n    >\n    <div class="btn-group" role="group">\n      <button\n        id="btnGroupDropLogin"\n        type="button"\n        class="btn btn-twitch dropdown-toggle"\n        data-bs-toggle="dropdown"\n        data-bs-auto-close="outside"\n        aria-label="other login option, connect manually"\n        aria-expanded="false"\n      ></button>\n      <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDropLogin">\n        <div class="p-3" style="width: 300px">\n          <label for="channelName" class="form-label">Connect to chat directly</label>\n          <div class="input-group mb-3">\n            <span class="input-group-text" id="directLoginChannel">twitch.tv/</span>\n            <input type="text" class="form-control" id="channelName" aria-describedby="directLoginChannel" />\n          </div>\n          <small class="text-body-secondary">Some features will not be available if you connect directly</small><br />\n          <button type="button" id="connectbtn" class="btn btn-primary float-end">Connect</button>\n        </div>\n      </div>\n    </div>\n  </div>',resetSettings()}function connect(){elements.status.innerHTML='\n    <h4>\n    <span class="badge bg-warning">Connecting... \n    <div class="spinner-border" style="width:18px;height:18px;" role="status"><span class="visually-hidden">Loading...</span></div>\n    </span>\n    </h4>',elements.topRight.innerHTML='\n    <div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n    <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>\n    <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n    <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n    </ul>\n    </div>\n    </div>',refreshData();let e={options:{clientId:CLIENT_ID,debug:!1},connection:{secure:!0,reconnect:!0},channels:[USER.channel]};client=new tmi.client(e),client.on("message",(async(e,t,n,a)=>{let r=n.split(" ").filter(Boolean)[0].toLowerCase();if(!voting_enabled)return"single"==currentFormat&&("1"==r||"a"==r||"2"==r||"b"==r)&&(Date.now()-currentTime)/1e3>10&&(currentTime=Date.now(),votePopover.show(),setTimeout((function(){votePopover.hide()}),2e3)),void("tierlist"==currentFormat&&currentTierlistCommands.includes(r)&&(currentTime=Date.now(),votePopoverTierlist.show(),setTimeout((function(){votePopoverTierlist.hide()}),2e3)));if(!voters.includes(t["user-id"])){if("single"==currentFormat){if(r==currentCommand.left)return vote_results.left++,voters.push(t["user-id"]),void updateScores();if(r==currentCommand.right)return vote_results.right++,voters.push(t["user-id"]),void updateScores()}if("tierlist"==currentFormat&&currentTierlistCommands.includes(r)){let e=currentTierlistData.findIndex((e=>e.command===r));if(-1==e)return;return currentTierlistData[e].score+=1,voters.push(t["user-id"]),void updateScores()}}})),client.on("connected",(async(e,t)=>{elements.status.innerHTML='<h4><span class="badge bg-success">Connected :)</span></h4>',saveSettings(),sendUsername("chat.vote/brackets",USER.channel,"twitch"==USER.platform?`twitch - ${USER.twitchLogin}`:"youtube"),await checkTags(USER.userID,USER.access_token)&&(elements.vtsLink.style.display=""),loadPFP()})),client.on("disconnected",(e=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${e}</span></h4>`})),client.on("notice",((e,t,n)=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${n}</span></h4>`})),client.connect().catch(console.error)}function switchTheme(e){document.documentElement.setAttribute("data-bs-theme",e?"dark":"light"),document.getElementById("twitchLogo").style.filter=`invert(${e?.25:.65})`,document.getElementById("btnGroupDrop1")&&document.getElementById("btnGroupDrop2")&&(document.getElementById("btnGroupDrop1").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop1").classList.add(""+(e?"btn-dark":"btn-secondary")),document.getElementById("btnGroupDrop2").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop2").classList.add(""+(e?"btn-dark":"btn-secondary")))}function addOption(e="",t="",n=""){let a=++document.querySelectorAll(".option-name").length,r="text";a>1&&(r=Array.from(document.getElementsByClassName("option-type")).find((e=>parseInt(e.dataset.optionId,10)===a-1)).value||"text"),t&&(r=t),elements.optionContainer.insertAdjacentHTML("beforeend",`<div class="card mb-2" data-option-id="${a}">\n      <div class="card-header">\n      Option #${a}\n      <i class="material-icons notranslate  deletebtn float-end" onclick="deleteOption('${a}')">delete_forever</i>\n      </div>\n      <div class="card-body">\n        <div class="input-group mb-3">\n          <span class="input-group-text">Name</span>\n          <input type="text" class="form-control option-name" data-option-id="${a}" onchange="saveBracket()" value="${e}"  placeholder="Option Name" aria-label="Option Name" />\n        </div>\n\n        <div class="input-group mb-3">\n          <label class="input-group-text">Type</label>\n          <select class="form-select option-type" data-option-id="${a}" onchange="saveBracket()">\n            <option value="text" ${"text"==r?"selected":""}>Text</option>\n            <option value="image" ${"image"==r?"selected":""}>Image</option>\n            <option value="youtube" ${"youtube"==r?"selected":""}>YouTube video</option>\n            <option value="twitch" ${"twitch"==r?"selected":""}>Twitch clip</option>\n            <option value="spotify" ${"spotify"==r?"selected":""}>Spotify song</option>\n          </select>\n        </div>\n\n        <div class="input-group mb-3">\n          <span class="input-group-text option-value-label">Value</span>\n          <input type="text" class="form-control option-value" data-option-id="${a}" onchange="saveBracket()" value="${n}" placeholder="Option Value" aria-label="Option Value" />\n          <button class="btn btn-outline-secondary" onclick="previewOption(${a})" type="button">Preview</button>\n          </div>\n\n      </div>\n    </div>`)}function deleteOption(e){e=parseInt(e,10);let t=parseInt(elements.bracketTitle.dataset.bracketId,10),n=BRACKETS.brackets.findIndex((e=>e.id===t));BRACKETS.brackets[n].options.splice(e-1,1),editBracket(t),saveBracket()}function previewOption(e){e=parseInt(e,10);let t=document.querySelectorAll(".option-name"),n=document.querySelectorAll(".option-type"),a=document.querySelectorAll(".option-value"),r=Array.from(t).find((t=>t.dataset.optionId==e)),i=Array.from(n).find((t=>t.dataset.optionId==e)),o=Array.from(a).find((t=>t.dataset.optionId==e));if("text"==i.value&&(elements.previewModalBody.innerHTML=`\n    <div class="card">\n    <div class="card-body">${o?.value||'<span class="text-body-secondary">Empty option</span>'}</div>\n    </div>`,previewModal.show()),"image"==i.value){let e=o?.value.match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g)||null;if(!e)return void showToast("Invalid image URL","warning",3e3);elements.previewModalBody.innerHTML=`\n    <div class="card">\n    <div class="card-body">\n    <img src="https://proxy.pepega.workers.dev/?url=${encodeURI(e)}" alt="${r.value}" title="${r.value}" class="option-image">\n    </div>\n    </div>`,previewModal.show()}if("youtube"==i.value){let e=/(youtu.*be.*)\/(watch\?v=|embed\/|v|shorts|)(.*?((?=[&#?])|$))/gm.exec(o?.value)||null;if(!e)return void showToast("Invalid YouTube URL","warning",3e3);e=e[3],elements.previewModalBody.innerHTML=`\n    <div class="card">\n    <div class="card-body">\n    <iframe \n    id="ytplayer" \n    type="text/html" \n    width="100%" height="480" \n    src="https://www.youtube.com/embed/${e}?autoplay=1&origin=https://chat.vote" \n    frameborder="0">\n    </iframe>\n    </div>\n    </div>`,previewModal.show()}if("twitch"==i.value)try{let e=new URL(o?.value),t="clips.twitch.tv"===e.hostname?/^\/(\w+(?:\/[A-Z]\w+)?(?:[\-\w]*))(?:\/|$)/.exec(e.pathname):/^\/\w+\/clip\/(\w+(?:\/[A-Z]\w+)?(?:[\-\w]*))(?:\/|$)/.exec(e.pathname);if(!t[1])return void showToast("Invalid Twitch clip URL","warning",3e3);elements.previewModalBody.innerHTML=`\n      <div class="card">\n      <div class="card-body">\n      <iframe \n      src="https://clips.twitch.tv/embed?clip=${t[1]}&parent=chat.vote&autoplay=true" \n      height="480" \n      width="100%" \n      preload="auto" \n      >\n      </iframe>\n      </div>\n      </div>`,previewModal.show()}catch(e){return void showToast("Invalid Twitch clip URL","warning",3e3)}if("spotify"==i.value)try{let e=o?.value.match(spotifyURLRegex);if(!e[2]||"track"!==e[1])return void showToast("Invalid Spotify track URL","warning",3e3);elements.previewModalBody.innerHTML=`\n      <div class="card">\n      <div class="card-body">\n      <iframe \n      style="border-radius:12px" src="https://open.spotify.com/embed/track/${e[2]}${darkTheme?"?theme=0":""}" \n      width="100%" height="352" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; picture-in-picture">\n      </iframe>\n      </div>\n      </div>`,previewModal.show()}catch(e){return void showToast("Invalid Spotify track URL","warning",3e3)}}function createBracket(e=!1,t="single"){let n=0;0!==BRACKETS?.brackets?.length&&(n=BRACKETS.brackets.reduce(((e,t)=>e.id>t.id?e:t)).id),BRACKETS.brackets.push({id:++n,title:"",description:"",options:[],generated:e,defaultFormat:"tiermaker"==t?"tierlist":"single",time:Date.now()}),editBracket(n),saveBracket()}function saveBracket(){let e=parseInt(elements.bracketTitle.dataset.bracketId,10),t=BRACKETS.brackets.find((t=>t.id===e));t.title=elements.bracketTitle.value||"Untitled bracket",t.description=elements.bracketDescription.value||"No description";let n=document.querySelectorAll(".option-name"),a=document.querySelectorAll(".option-type"),r=document.querySelectorAll(".option-value");t.options=[];for(let e=0;e<n.length;e++)t.options.push({name:n[e].value,type:a[e].value,value:r[e].value});loadBrackets(),saveSettings()}function showStartModal(e){startID=e;let t=parseInt(startID,10),n=BRACKETS.brackets.find((e=>e.id===t));elements.formatSelect.value="tierlist"==n?.defaultFormat?"tierlist":"single",n.options.length<2?showToast("Bracket must have 2 options at least","warning",3e3):(n.options.flatMap((e=>e.type)).includes("spotify")?elements.spotifyWarning.style.display="":elements.spotifyWarning.style.display="none",startModal.show())}function startBracket(){let e=parseInt(startID,10),t=structuredClone(BRACKETS.brackets.find((t=>t.id===e)));if(t.options.length<2)return void showToast("Bracket must have 2 options at least","warning",3e3);let n=elements.formatSelect.value||"single",a=parseInt(elements.optionLimit.value,10)||0;if(a>0)for(;t.options.length>a;)t.options.splice(Math.floor(Math.random()*t.options.length),1);switch(n){case"single":currentFormat="single",startSingleElimination(t);break;case"tierlist":let e=t.options.flatMap((e=>e.type));for(let t=0;t<e.length;t++)if("image"!==e[t])return void showToast("Only images are supported in tier lists for now :)","warning",3e3);currentFormat="tierlist",startTierlist(t);break;default:return void showToast("Unknown format","warning",3e3)}changeSiteLinkTarget("_blank")}function startSingleElimination(e){let t=Math.ceil(Math.log2(e.options.length)),n=e.options.length;if(0!=(n&n-1)){let e=1;for(;e<n;)e<<=1;n=e}currentBracket={},currentBracket.round1=[...e.options],shuffleArray(currentBracket.round1);let a=0;for(;currentBracket.round1.length<n;)currentBracket.round1.splice(currentBracket.round1.length-2*a,0,null),a++;for(let e=1;e<=t;e++)currentBracket[`round${e+1}`]=[...Array(currentBracket[`round${e}`].length/2)];elements.brackets_editor.style.display="none",elements.bracket.style.display="",elements.title.innerHTML=e.title,elements.endTitle.innerHTML=`<h1 class="display-6">Winner of ${e.title}</h1>`,elements.pickWinner.innerHTML='<i class="material-icons notranslate">navigate_next</i>Next match',currentRound=1,currentOption=0,currentScores={left:0,right:0},currentCommand={left:"a",right:"b"},nextMatch()}function startTierlist(e){elements.tierlistContainer.innerHTML="",elements.upcoming_images.innerHTML="";for(let t=0;t<e.options.length;t++)elements.upcoming_images.insertAdjacentHTML("beforeend",`<img class="border rounded tierlist-item me-1" alt="${e.options[t].name}" title="${e.options[t].name}" loading="lazy" src="https://proxy.pepega.workers.dev/?url=${e.options[t].value}" />`);addTier("S","s","#de0b0b"),addTier("A","a","#d9740f"),addTier("B","b","#dea216"),addTier("C","c","#f7e51b"),addTier("D","d","#64f71b"),addTier("F","f","#08cc12"),addTier("¯\\_(ツ)_/¯","idk","#0fd9cb");let t="";for(let e=0,n=currentTierlistData.length;e<n;e++)t+=`<kbd>${currentTierlistData[e].command.toUpperCase()}</kbd> <br />`;elements.tierlistLabels.innerHTML=`<div class="col text-end p-1">${t}</div>`,updateScores(),elements.brackets_editor.style.display="none",elements.tierlist.style.display="",currentTierlist={},currentTierlist=structuredClone(e),currentTierlistCommands=currentTierlistData.map((e=>e.command)),nextTierlistItem()}let currentRound=1,currentOption=0,currentScores={left:0,right:0},currentCommand={left:"a",right:"b"};function nextMatch(){currentOption==currentBracket[`round${currentRound}`].length&&(currentRound++,currentOption=0);let e="";switch(currentBracket[`round${currentRound}`].length){case 2:e="Finals";break;case 4:e="Semifinals";break;case 8:e="Quarterfinals";break;default:e=`Round of ${currentBracket[`round${currentRound}`].length}`;break}if(elements.round.innerHTML=`${e} • ${currentOption/2+1}/${currentBracket[`round${currentRound}`].length/2}`,Object.keys(currentBracket).length==currentRound)return void showWinner(currentBracket[`round${currentRound}`]);Object.keys(currentBracket).length-1==currentRound&&(elements.pickWinner.innerHTML='<i class="material-icons notranslate">emoji_events</i>Show winner');let t=currentBracket[`round${currentRound}`][currentOption++],n=currentBracket[`round${currentRound}`][currentOption++];if(null!==t)if(null!==n){showOption("left",t),showOption("right",n);for(let e of document.getElementsByClassName("streamer-vote"))e.style.display="";vote_results={left:0,right:0},voters=[],updateScores(),elements.keepVotingEnabled.checked||disableVoteButton(),elements.left_card.style="",elements.right_card.style="",elements.left_title.style="",elements.right_title.style="",elements.changeCommand.checked?"a"==currentCommand.left?(currentCommand.left="1",currentCommand.right="2"):(currentCommand.left="a",currentCommand.right="b"):(currentCommand.left="1",currentCommand.right="2"),elements.left_command.innerHTML=currentCommand.left,elements.right_command.innerHTML=currentCommand.right,elements.disableAnimations.checked||(anime({targets:"#centerTitle",translateY:["-100%",0]}),anime({targets:"#left_title",translateX:["-100%",0]}),anime({targets:"#left_card",translateX:["-100%",0]}),anime({targets:"#right_title",translateX:["200%",0]}),anime({targets:"#right_card",translateX:["200%",0]}),elements.changeCommand.checked&&anime({targets:["#left_command","#right_command"],keyframes:[{fontSize:"+=20px"},{fontSize:"-=20px"}],delay:2e3,duration:500}))}else promoteOption(t);else promoteOption(n)}let left_player,right_player,currentItem=1,currentTierlistData=[{name:"s",command:"s",score:0},{name:"a",command:"a",score:0},{name:"b",command:"b",score:0},{name:"c",command:"c",score:0},{name:"d",command:"d",score:0},{name:"f",command:"f",score:0},{name:"idk",command:"idk",score:0}],currentTierlistCommands=[];function nextTierlistItem(){let e=currentTierlist.options.shift();elements.currentTierlistItem.src=e.value,elements.currentTierlistItem.alt=e.name||"Untitled item",elements.currentTierlistItem.title=e.name||"Untitled item",elements.currentTierlistItemName.innerHTML=e.name||"Untitled item",elements.upcoming_images.firstElementChild.remove(),resetScores()}function streamerVote(e){vote_results[e]++,voters.push(USER.userID),updateScores();for(let e of document.getElementsByClassName("streamer-vote"))e.style.display="none"}function pickWinner(e=null){let t=currentBracket[`round${currentRound}`][currentOption-2],n=currentBracket[`round${currentRound}`][currentOption-1],a=e;null==a&&(a=vote_results.left>vote_results.right?"left":"right"),vote_results.left!=vote_results.right||e?promoteOption(e=e?"left"==e?t:n:vote_results.left>vote_results.right?t:n,a):showToast("Options are tied, can't pick a winner","warning",3e3)}function pickWinnerTierlist(){let e=[...currentTierlistData].sort(((e,t)=>t.score-e.score));e[0].score!=e[1].score?placeTierlistItem(e[0]):showToast("Top 2 tiers are tied, unable to place item","warning",4e3)}function restartMatch(){resetScores();for(let e of document.getElementsByClassName("streamer-vote"))e.style.display=""}function resetScores(){voters=[],vote_results={left:0,right:0};for(let e=0;e<currentTierlistData.length;e++)currentTierlistData[e].score=0;updateScores()}function promoteOption(e,t=null){let n=currentBracket[`round${currentRound+1}`].findIndex((e=>void 0===e));currentBracket[`round${currentRound+1}`][n]=e,t&&!elements.disableAnimations.checked?(anime({targets:"#centerTitle",translateY:"2000px",duration:1e3}),anime({targets:`#${"right"==t?"left":"right"}_title`,translateY:"2000px",scale:"0.8",duration:1e3}),anime({targets:`#${"right"==t?"left":"right"}_card`,translateY:"2000px",scale:"0.8",duration:1e3}),anime({targets:`#${t}_title`,translateX:[{value:("right"==t?"-":"+")+"110%",duration:500}],translateY:[{value:"-50%",duration:500},{value:"-200%",duration:500}],scale:[{value:"1.2",duration:500}]}),anime({targets:`#${t}_card`,translateX:[{value:("right"==t?"-":"+")+"50%",duration:500}],translateY:[{value:"50%",duration:500}],scale:[{value:"1.2",duration:500}],translateY:[{value:"-2000px",duration:500,delay:500}],complete:function(e){nextMatch()}})):nextMatch()}function placeTierlistItem(e){let t=`item${Date.now()}`;document.querySelector(`[data-tier="${e.command}"]`).innerHTML+=`<img id="${t}" class="border rounded tierlist-item me-1" alt="${elements.currentTierlistItemName.innerHTML}" title="${elements.currentTierlistItemName.innerHTML}" src=${elements.currentTierlistItem.src}>`;let n=elements.currentTierlistItem.getBoundingClientRect(),a=document.getElementById(t).getBoundingClientRect();elements.disableAnimations.checked||anime({targets:`#${t}`,translateY:[n.top-a.top,0],translateX:[n.left-a.left,0],height:["20vh","10vh"]}),nextTierlistItem()}function showOption(e,t){if(elements[`${e}_name`].innerHTML=t.name||'<span class="text-body-secondary">Untitled option</span>',"text"==t.type&&(elements[`${e}_value`].innerHTML=t.value||'<span class="text-body-secondary">Empty option</span>'),"image"==t.type){let n=t?.value.match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g)||null;if(!n)return void(elements[`${e}_value`].innerHTML="Invalid image URL");elements[`${e}_value`].innerHTML=`<img src="https://proxy.pepega.workers.dev/?url=${encodeURI(n)}" alt="${t.name}" title="${t.name}" class="option-image">`}if("youtube"==t.type){let n=/(youtu.*be.*)\/(watch\?v=|embed\/|v|shorts|)(.*?((?=[&#?])|$))/gm.exec(t?.value)||null;if(!n)return void(elements[`${e}_value`].innerHTML="Invalid YouTube URL");n=n[3],elements[`${e}_value`].innerHTML=`\n    <iframe \n    id="${e}_youtube" \n    type="text/html" \n    width="100%" height="480" \n    src="https://www.youtube.com/embed/${n}?enablejsapi=1&origin=https://chat.vote" \n    frameborder="0">\n    </iframe>`,"left"==e?left_player=new YT.Player("left_youtube",{events:{onReady:e=>{e.target.playVideo()},onStateChange:e=>{}}}):right_player=new YT.Player("right_youtube",{events:{onReady:e=>{},onStateChange:e=>{}}})}if("twitch"==t.type)try{let n=new URL(t?.value),a="clips.twitch.tv"===n.hostname?/^\/(\w+(?:\/[A-Z]\w+)?(?:[\-\w]*))(?:\/|$)/.exec(n.pathname):/^\/\w+\/clip\/(\w+(?:\/[A-Z]\w+)?(?:[\-\w]*))(?:\/|$)/.exec(n.pathname);if(!a[1])return void(elements[`${e}_value`].innerHTML="Invalid Twitch clip URL");elements[`${e}_value`].innerHTML=`\n      <iframe \n      src="https://clips.twitch.tv/embed?clip=${a[1]}&parent=chat.vote&autoplay=${"left"==e}" \n      height="480" \n      width="100%" \n      preload="auto" \n      >\n      </iframe>`}catch(t){return void(elements[`${e}_value`].innerHTML="Invalid Twitch clip URL")}if("spotify"==t.type)try{let n=t?.value.match(spotifyURLRegex);if(!n[2]||"track"!==n[1])return void(elements[`${e}_value`].innerHTML="Invalid Spotify track URL");elements[`${e}_value`].innerHTML=`\n      <iframe \n      style="border-radius:12px" src="https://open.spotify.com/embed/track/${n[2]}${darkTheme?"?theme=0":""}" \n      width="100%" height="352" frameBorder="0" allowfullscreen="" allow="${"left"==e?"autoplay;":""} clipboard-write; encrypted-media; picture-in-picture">\n      </iframe>`}catch(t){return void(elements[`${e}_value`].innerHTML="Invalid Spotify track URL")}}function updateScores(){if("single"==currentFormat&&(scoreHidden?(elements.left_score.innerHTML='<span class="text-body-secondary">Score hidden</span>',elements.right_score.innerHTML='<span class="text-body-secondary">Score hidden</span>'):(elements.left_score.innerHTML=`${vote_results.left.toLocaleString()} ${1==vote_results.left?"vote":"votes"} \n      (${Math.round(vote_results.left/(vote_results.left+vote_results.right)*100)||0}%)`,elements.right_score.innerHTML=`${vote_results.right.toLocaleString()} ${1==vote_results.right?"vote":"votes"} \n      (${Math.round(vote_results.right/(vote_results.left+vote_results.right)*100)||0}%)`)),"tierlist"==currentFormat)if(scoreHidden){let e="";for(let t=0,n=currentTierlistData.length;t<n;t++)e+="🙈<br />";elements.tierlistScores.innerHTML=`<div class="col text-start p-1">${e}</div>`}else{let e="",t=0;for(let e=0,n=currentTierlistData.length;e<n;e++)t+=currentTierlistData[e].score;for(let n=0,a=currentTierlistData.length;n<a;n++)e+=`${currentTierlistData[n].score} (${Math.round(currentTierlistData[n].score/t*100)||0}%)<br />`;elements.tierlistScores.innerHTML=`<div class="col text-start p-1">${e}</div>`}}function showWinner(e){showOption("winner",e[0]),elements.left_value.innerHTML="",elements.right_value.innerHTML="",elements.bracket.style.display="none",elements.end.style.display=""}function toggleVoting(){voting_enabled?disableVoteButton():enableVoteButton()}function enableVoteButton(){elements.enableVoting.classList.remove("btn-success"),elements.enableVoting.classList.add("btn-danger"),elements.enableVoting.innerText="Stop Voting",elements.enableVotingTierlist.classList.remove("btn-success"),elements.enableVotingTierlist.classList.add("btn-danger"),elements.enableVotingTierlist.innerText="Stop Voting",voting_enabled=!0}function disableVoteButton(){elements.enableVoting.classList.remove("btn-danger"),elements.enableVoting.classList.add("btn-success"),elements.enableVoting.innerText="Start Voting",elements.enableVotingTierlist.classList.remove("btn-danger"),elements.enableVotingTierlist.classList.add("btn-success"),elements.enableVotingTierlist.innerText="Start Voting",voting_enabled=!1}function quitBracket(){elements.bracket.style.display="none",elements.end.style.display="none",elements.tierlist.style.display="none",elements.brackets_editor.style.display="",elements.left_value.innerHTML="",elements.right_value.innerHTML="",elements.winner_value.innerHTML="",quitBracketModal.hide(),changeSiteLinkTarget("_self")}function editBracket(e){elements.bracketEditor.style.display="",elements.optionContainer.innerHTML="",e=parseInt(e,10);let t=BRACKETS.brackets.find((t=>t.id===e));t&&(elements.bracketTitle.value=t.title,elements.bracketTitle.dataset.bracketId=e,elements.bracketDescription.value=t.description),elements.bracketEditorHeader.innerHTML=`ID${e}`;for(let e=0;e<t.options.length;e++)addOption(t.options[e].name,t.options[e].type,t.options[e].value)}function deleteBracket(e){e=parseInt(e,10);let t=BRACKETS.brackets.find((t=>t.id===e));elements.deleteBracketModalBody.innerHTML=`Delete "${t.title}"?`,elements.deleteBracketButton.dataset.bracketId=e,deleteBracketModal.show()}function loadBrackets(){if(!BRACKETS?.brackets?.length)return void(elements.myBrackets.innerHTML='<span class="text-body-secondary">Nothing here</span>');let e="";for(let t=BRACKETS.brackets.length-1;t>=0;t--)e+=`<div class="card mb-3">\n    <div class="card-header">\n      ${BRACKETS.brackets[t].title||"Untitled bracket"}\n      <div class="btn-group btn-group-sm float-end" role="group" aria-label="bracket controls">\n        <button type="button" class="btn btn-success"\n         data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Start bracket" onclick="showStartModal(${BRACKETS.brackets[t].id})">\n          <i class="material-icons notranslate">play_arrow</i>\n        </button>\n        <button type="button" class="btn btn-secondary" ${BRACKETS.brackets[t]?.generated?'style="display: none"':""}\n        data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Publish bracket" onclick="publishBracket(${BRACKETS.brackets[t].id},this)">\n         <i class="material-icons notranslate">cloud_upload</i>\n       </button>\n        <button type="button" class="btn btn-primary"\n         data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Edit bracket" onclick="editBracket(${BRACKETS.brackets[t].id})">\n        <i class="material-icons notranslate">edit</i>\n        </button>\n        <button type="button" class="btn btn-danger"\n         data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Delete bracket" onclick="deleteBracket(${BRACKETS.brackets[t].id})">\n          <i class="material-icons notranslate">delete_forever</i>\n        </button>\n      </div>\n    </div>\n    <div class="card-body my-bracket-body">\n      <h5 class="card-title">${BRACKETS.brackets[t].description||"No description"}</h5>\n      <p class="card-text">${BRACKETS.brackets[t].options.map((e=>`${icons[e.type]} ${e.name}`)).join(" • ")||"No options"}</p>\n    </div>\n  </div>`;elements.myBrackets.innerHTML=e,enableTooltips()}function closeEditor(){saveBracket(),elements.bracketEditor.style.display="none"}function shuffleArray(e){for(let t=e.length-1;t>0;t--){const n=Math.floor(Math.random()*(t+1));[e[t],e[n]]=[e[n],e[t]]}}let approvedBrackets,previewedBracket=[],previewedBracketTitle="",previewedBracketDescription="";async function previewSpotifyPlaylist(){let e=elements.spotifyPlaylistLink.value?.replace(/\s+/g,"").match(spotifyURLRegex);if(e[2])try{elements.spotifyPlaylistPreview.innerHTML=spinner;let t={method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"},redirect:"follow"},n=await fetch(`https://brackets.pepega.workers.dev/spotifyplaylist?id=${e[2]}`,t),a=await n.json(),r=[...a[0].tracks.items];for(let e=1;e<a.length;e++)r.push(...a[e].items);previewedBracketTitle=a[0].name||"Untitled playlist",previewedBracketDescription=`${a[0].description||"No description"} - Generated from ${elements.spotifyPlaylistLink.value}`,previewedBracket=[];let i='<ul class="list-group">';for(let e=0;e<r.length;e++)r[e].track.is_playable&&(previewedBracket.push({name:`${r[e].track.name} - ${r[e].track.artists.map((e=>e.name)).join(", ")}`,type:"spotify",value:r[e].track.external_urls.spotify}),i+=`\n      <li class="list-group-item">\n      <a target="_blank" rel="noopener noreferrer" href="${r[e].track.preview_url}">${r[e].track.name} - ${r[e].track.artists.map((e=>e.name)).join(", ")}</a>\n      </li>`);i+="</ul>",elements.spotifyPlaylistPreview.innerHTML=`<p>${a[0].name||"Untitled playlist"} - ${a[0].description||"No description"} - ${0==previewedBracket.length?"Playlist has no tracks":`${previewedBracket.length} ${1==previewedBracket.length?"track":"tracks"}`} </p>${i}`}catch(e){return void showToast("Could not load playlist","warning",3e3)}else showToast("Invalid playlist URL provided","warning",3e3)}async function previewTiermaker(){let e=elements.tiermakerLink.value?.replace(/\s+/g,"")?.toLowerCase()||null,t=e.match(/\/([^\/?]+)(?:\?.*)?$/)[1],n=t.slice(t.lastIndexOf("-")+1);if(!t)return void showToast("Could not find the provided tier list","warning",3e3);try{elements.tiermakerPreview.innerHTML=spinner;let a={method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"},redirect:"follow"},r=await fetch(`https://brackets.pepega.workers.dev/tiermaker?id=${t}`,a),i=await r.json();previewedBracketTitle="Generated TierMaker bracket",previewedBracketDescription=`Generated from ${e}`,previewedBracket=[];let o=JSON.parse(i),l=await testImage(`https://tiermaker.com/images/chart/chart/${t}/${o[1]}`,1);if(!l&&(l=await testImage(`https://tiermaker.com/images/template_images/2022/${n}/${t}/${o[1]}`,2),!l))return void showToast("Could not load tier list :(","warning",3e3);let s='<ul class="list-group">';for(let e=1;e<o.length;e++){let a=o[e].replace("png","").replace("jpg","").replace(".","").replaceAll("-"," "),r=1==l?`https://tiermaker.com/images/chart/chart/${t}/${o[e]}`:`https://tiermaker.com/images/template_images/2022/${n}/${t}/${o[e]}`;previewedBracket.push({name:a,type:"image",value:r}),s+=`\n        <li class="list-group-item">\n        <a target="_blank" rel="noopener noreferrer" href="https://proxy.pepega.workers.dev/?url=${encodeURI(r)}">\n        ${a||"Untitled option"}\n        </a>\n        </li>`}s+="</ul>",elements.tiermakerPreview.innerHTML=`<p>${o.length-1} images</p> <p class="text-warning">Make sure the images load by testing one of the links below</p>${s}`}catch(e){return void showToast("Could not find the provided tier list","warning",3e3)}}async function testImage(e,t){try{const n=await fetch(`https://helper.pepega.workers.dev/cors/?${e}`);if((await n.blob()).type.startsWith("image/"))return t}catch(e){return 0}}async function previewClips(){let e=elements.clipsChannel.value?.replace(/\s+/g,"");if(!e)return void showToast("No channel provided","warning",3e3);let t=await getUserID(e);try{elements.clipsPreview.innerHTML=spinner;let n={method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"},redirect:"follow"},a=await fetch(`https://helper.pepega.workers.dev/twitch/clips?broadcaster_id=${t}`,n),r=(await a.json()).data;if(0==r)return void showToast("Could not load clips","warning",3e3);previewedBracketTitle=`Top ${e} clips`,previewedBracketDescription=`Bracket with 100 ${e} clips`,previewedBracket=[];let i='<ul class="list-group">';for(let e=0;e<r.length;e++)previewedBracket.push({name:r[e].title,type:"twitch",value:r[e].url}),i+=`\n      <li class="list-group-item">\n      <a target="_blank" rel="noopener noreferrer" href="${r[e].url}">\n      ${r[e].title} - ${r[e].view_count.toLocaleString()} ${1==r[e].view_count?"view":"views"}\n      </a>\n      </li>`;i+="</ul>",elements.clipsPreview.innerHTML=`<p>${r.length} ${1==r.length?"clip":"clips"} </p>${i}`}catch(e){return void showToast("Could not load clips","warning",3e3)}}async function previewEmotes(){let e=elements.emotesChannel.value?.replace(/\s+/g,"")?.toLowerCase()||null;if(e)try{elements.emotesPreview.innerHTML=spinner;let t=await getChannelTwitchEmotes(e,!0);previewedBracketTitle=`Best ${e} emote`,previewedBracketDescription=`Bracket with ${t.length} ${e} emotes`,previewedBracket=[];let n='<ul class="list-group">';for(let e=0;e<t.length;e++)previewedBracket.push({name:t[e].name,type:"image",value:t[e].url}),n+=`\n      <li class="list-group-item">\n      <a target="_blank" rel="noopener noreferrer" href="${t[e].url}">${t[e].name}</a>\n      </li>`;n+="</ul>",elements.emotesPreview.innerHTML=`<p>${0==t.length?"Channel has no emotes":`${t.length} ${1==t.length?"emote":"emotes"}`} </p>${n}`}catch(e){return void showToast("Could not load emotes for the provided channel","warning",3e3)}else showToast("No channel provided","warning",3e3)}async function previewUwufufu(){let e=elements.uwufufuLink.value?.replace(/\s+/g,"")?.toLowerCase()||null;if(!e)return void showToast("No link provided","warning",3e3);let t=0,n=0;try{let a=e.match(/\/quiz\/worldcup\/(.+?)(\/rank)?(\?.*)?$/)[1];if(24!==a.length)return void showToast("Could not find the provided bracket","warning",3e3);elements.uwufufuPreview.innerHTML=spinner;let r={method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"},redirect:"follow"},i=await fetch(`https://brackets.pepega.workers.dev/uwufufu?id=${a}`,r),o=await i.json();previewedBracketTitle=o.title||"Generated UwUFUFU bracket",previewedBracketDescription=`Generated from ${e}`,previewedBracket=[];for(let e=0;e<o.list.length;e++)o.list[e].isVideo&&!o.list[e].videoUrl||(o.list[e].isVideo||o.list[e].resourceUrl)&&previewedBracket.push({name:o.list[e].name,type:o.list[e].isVideo?"youtube":"image",value:o.list[e].isVideo?o.list[e].videoUrl:o.list[e].resourceUrl});let l='<ul class="list-group">';for(let e=0;e<previewedBracket.length;e++)"youtube"==previewedBracket[e].type?(l+=`\n        <li class="list-group-item">\n        <a target="_blank" rel="noopener noreferrer" href="${previewedBracket[e].value}">${previewedBracket[e].name||"Untitled option"}</a>\n        </li>`,t++):(l+=`\n        <li class="list-group-item">\n        <a target="_blank" rel="noopener noreferrer" href="https://proxy.pepega.workers.dev/?url=${encodeURI(previewedBracket[e].value)}">\n        ${previewedBracket[e].name||"Untitled option"}\n        </a>\n        </li>`,n++);l+="</ul>",elements.uwufufuPreview.innerHTML=`<p>${t>0?`${t} videos`:""} ${n>0?`${n} images`:""}</p>${l}`}catch(e){return void showToast("Could not find the provided bracket","warning",3e3)}}async function previewYTChannel(){let e=elements.ytchannelLink.value?.replace(/\s+/g,"");if(!e)return void showToast("No channel provided","warning",3e3);let t=await getYTChannelID(e);if(t?.items[0]?.id?.channelId){t=t.items[0].id.channelId;try{elements.ytchannelPreview.innerHTML=spinner;let n=await getYTChannelVideos(t);n=n.flatMap((e=>e.items)),previewedBracketTitle=`Top ${e} videos`;let a=0;previewedBracket=[];let r='<ul class="list-group">';for(let e=0;e<n.length;e++)"upcoming"!=n[e].snippet?.liveBroadcastContent&&"youtube#channel"!=n[e].snippet?.id?.kind&&(a++,previewedBracket.push({name:n[e].snippet.title,type:"youtube",value:`https://www.youtube.com/watch?v=${n[e].id.videoId}`}),r+=`\n      <li class="list-group-item">\n      <a target="_blank" rel="noopener noreferrer" href="https://www.youtube.com/watch?v=${n[e].id.videoId}">\n      ${n[e].snippet.title}\n      </a>\n      </li>`);previewedBracketDescription=`Bracket with the top ${a} ${e} videos`,r+="</ul>",elements.ytchannelPreview.innerHTML=`<p>${a} ${1==a?"video":"videos"} </p>${r}`}catch(e){return void showToast("Could not channel videos","warning",3e3)}}else showToast("Could not find channel","warning",3e3)}async function previewYTPlaylist(){let e=elements.ytplaylistLink.value?.replace(/\s+/g,"");if(!e)return void showToast("No playlist link provided","warning",3e3);let t=e.match(/^.*(youtu.be\/|list=)([^#\&\?]*).*/);if(t[2]&&34===t[2].length)try{elements.ytplaylistPreview.innerHTML=spinner;let n=await getYTPlaylist(t[2]),a=await getYTPlaylistInfo(t[2]);n=n.flatMap((e=>e.items)),previewedBracketTitle=a?.items[0]?.snippet?.title||"YouTube playlist generated bracket",previewedBracketDescription=`Generated from YouTube playlist ${e}`,previewedBracket=[];let r='<ul class="list-group">';for(let e=0;e<n.length;e++)previewedBracket.push({name:n[e].snippet.title,type:"youtube",value:`https://www.youtube.com/watch?v=${n[e].snippet.resourceId.videoId}`}),r+=`\n      <li class="list-group-item">\n      <a target="_blank" rel="noopener noreferrer" href="https://www.youtube.com/watch?v=${n[e].snippet.resourceId.videoId}">\n      ${n[e].snippet.title}\n      </a>\n      </li>`;r+="</ul>",elements.ytplaylistPreview.innerHTML=`<p>${n.length} ${1==n.length?"video":"videos"} </p>${r}`}catch(e){return void showToast("Could not load playlist","warning",3e3)}else showToast("Invalid playlist link provided","warning",3e3)}async function generateBracket(){let e=elements.generateBracketType.value?.replace(/\s+/g,"")?.toLowerCase()||null;if(e)if(0!=previewedBracket.length){createBracket(!0,e),elements.bracketTitle.value=previewedBracketTitle,elements.bracketDescription.value=previewedBracketDescription;for(let e=0;e<previewedBracket.length;e++)addOption(previewedBracket[e].name,previewedBracket[e].type,previewedBracket[e].value);saveBracket(),generateModal.hide()}else showToast("You must preview the bracket first","warning",3e3);else showToast("No bracket type selected","warning",3e3)}async function importApproved(e){let t=approvedBrackets.find((t=>t.id===e));createBracket(!0),elements.bracketTitle.value=t.bracket.title,elements.bracketDescription.value=`${t.bracket.description} - Bracket by @${t.username} - bracket ID: ${t.id}`;for(let e=0;e<t.bracket.options.length;e++)addOption(t.bracket.options[e].name,t.bracket.options[e].type,t.bracket.options[e].value);saveBracket(),browseModal.hide()}async function publishBracket(e,t){t.innerHTML='<div class="spinner-border spinner-border-sm" role="status"><span class="visually-hidden">Loading...</span></div>',e=parseInt(e,10);let n=BRACKETS.brackets.find((t=>t.id===e));if(n.options.length<2)return showToast("Bracket must have 2 options at least","warning",3e3),void(t.innerHTML='<i class="material-icons notranslate">cloud_upload</i>');let a={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({userid:USER.userID,username:USER.channel,access_token:USER.access_token,time:new Date,bracket:n}),redirect:"follow"};try{let e=await fetch("https://brackets.pepega.workers.dev/publish",a),n=await e.json();showToast(n.message,"info",3e3),t.innerHTML='<i class="material-icons notranslate">cloud_upload</i>'}catch(e){showToast("Could not publish bracket","danger",3e3),t.innerHTML='<i class="material-icons notranslate">cloud_upload</i>'}}async function loadApproved(){elements.browseModalBody.innerHTML=spinner,browseModal.show();let e={method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"},redirect:"follow"};try{let t=await fetch("https://brackets.pepega.workers.dev/approved",e),n=await t.json();approvedBrackets=n;let a="";0==n.length&&(a="Could not find any brackets :(");for(let e=0;e<n.length;e++){a+=`\n      <div class="card mb-5">\n      <div class="card-header">${n[e].bracket.title} <span class="text-body-secondary">by @${n[e].username}</span></div>\n      <div class="card-body">\n      <p class="card-text">${n[e].bracket.description}</p>\n      Options(${n[e].bracket.options.length}):\n      <ul class="list-group" style="height: 200px; overflow: auto">`;for(let t=0;t<n[e].bracket.options.length;t++)a+=`<li class="list-group-item">${n[e].bracket.options[t].name} - ${n[e].bracket.options[t].value}</li>`;a+=`\n      </ul>\n      <button type="button" class="btn btn-success float-end mt-3 me-2" onclick="importApproved('${n[e].id}')">\n      <i class="material-icons notranslate">cloud_download</i> Import\n      </button>\n      </div>\n      </div>`}elements.browseModalBody.innerHTML=a,linkifyElementID("browseModalBody")}catch(e){elements.browseModalBody.innerHTML="Could not load brackets :("}}function zoomCard(e){elements[e].classList.toggle("zoomed"),elements[`${e}_zoom_icon`].innerHTML=elements[e].classList.contains("zoomed")?"zoom_out":"zoom_in",elements[e].classList.contains("zoomed")?anime({targets:`#${e}`,translateX:""+("left_card"==e?"+=50%":"-=50%"),scale:"+=0.6"}):anime({targets:`#${e}`,translateX:""+("left_card"==e?"-=50%":"+=50%"),scale:"-=0.6"})}let scoreHidden=!1;function hideScore(){if(scoreHidden=!scoreHidden,elements.hideScoreIcon.innerHTML=scoreHidden?"visibility_off":"visibility",elements.hideScoreTierlistIcon.innerHTML=scoreHidden?"visibility_off":"visibility",scoreHidden)updateScores();else{if("single"==currentFormat){let e={left:0,right:0};anime({targets:e,left:vote_results.left,right:vote_results.right,round:1,easing:"easeInOutExpo",update:function(){elements.left_score.innerHTML=`${e.left.toLocaleString()} ${1==e.left?"vote":"votes"}`,elements.right_score.innerHTML=`${e.right.toLocaleString()} ${1==e.right?"vote":"votes"}`}})}"tierlist"==currentFormat&&updateScores()}}function loadTierlistEditor(){let e=document.querySelectorAll(".tierlist-label"),t="";for(let n=0;n<e.length;n++)t+=`<div class="input-group mb-3">\n    <span class="input-group-text">Tier name:</span>\n    <input type="text" class="form-control tier-name" placeholder="name" aria-label="Tier name" value="${e[n].textContent}" onchange="updateTierlist()" />\n    <span class="input-group-text">Voting command:</span>\n    <input type="text" class="form-control tier-command" placeholder="command" aria-label="Voting command" value="${e[n].textContent}" onchange="updateTierlist()" />\n    <span class="input-group-text">Color:</span>\n    <input type="color" class="form-control tier-color" value="${rgba2hex(e[n].style.backgroundColor)}" aria-label="Tier color" onchange="updateTierlist()" />\n    <button class="btn btn-outline-secondary" type="button" id="button-addon2"><i class="material-icons notranslate" style="cursor: pointer">delete_forever</i></button>\n    </div>`;elements.tierlistEditor.innerHTML=t}function addTier(e,t,n){let a=document.querySelectorAll(".tierlist-label");"name"==e&&(e=`Tier#${a.length+1}`,t=`Tier#${a.length+1}`),elements.tierlistContainer.insertAdjacentHTML("beforeend",`<div class="card mb-1 tierlist-tier">\n    <div class="row g-0">\n    <div class="col-auto rounded-start tierlist-label" contenteditable="true" spellcheck="false" style="background-color: ${n}">${e}</div>\n    <div class="col">\n    <div class="card-body p-1" data-tier="${t}"></div>\n    </div>\n    </div>\n    </div>`),loadTierlistEditor()}function updateTierlist(){}const rgba2hex=e=>`#${e.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+\.{0,1}\d*))?\)$/).slice(1).map(((e,t)=>(3===t?Math.round(255*parseFloat(e)):parseFloat(e)).toString(16).padStart(2,"0").replace("NaN",""))).join("")}`;async function getYTPlaylist(e){let t=[];for(t.push(await getYTPlaylistPart(e));t[t.length-1].nextPageToken;)t.push(await getYTPlaylistPart(e,t[t.length-1].nextPageToken));return t}async function getYTChannelVideos(e,t=1){let n=[];n.push(await getYTChannelVideosPart(e));for(let a=1;a<t;a++)n.push(await getYTChannelVideosPart(e,n[n.length-1].nextPageToken));return n}const API_KEY_YT="AIzaSyAMCaIslOwxlmotLsNN4NB2ia949h4GLP0";async function getYTPlaylistPart(e,t=null){let n={method:"GET",redirect:"follow"};try{let a=await fetch(`https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=50&key=${API_KEY_YT}&playlistId=${encodeURIComponent(e)}${t?`&pageToken=${t}`:""}`,n);return await a.json()}catch(e){return!1}}async function getYTPlaylistInfo(e){let t={method:"GET",redirect:"follow"};try{let n=await fetch(`https://youtube.googleapis.com/youtube/v3/playlists?part=snippet&maxResults=50&key=${API_KEY_YT}&id=${encodeURIComponent(e)}`,t);return await n.json()}catch(e){return!1}}async function getYTChannelVideosPart(e,t=null){let n={method:"GET",redirect:"follow"};try{let a=await fetch(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=50&order=viewCount&safeSearch=none&type=video&videoEmbeddable=true&key=${API_KEY_YT}&channelId=${encodeURIComponent(e)}${t?`&pageToken=${t}`:""}`,n);return await a.json()}catch(e){return!1}}async function getYTChannelID(e){let t={method:"GET",redirect:"follow"};try{let n=await fetch(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${encodeURIComponent(e)}&type=channel&maxResults=1&key=${API_KEY_YT}`,t);return await n.json()}catch(e){return!1}}function dragElement(){let e=0,t=0,n=0,a=0;function r(r){(r=r||window.event).preventDefault(),e=n-r.clientX,t=a-r.clientY,n=r.clientX,a=r.clientY,elements.tierlistItem.style.top=elements.tierlistItem.offsetTop-t+"px",elements.tierlistItem.style.left=elements.tierlistItem.offsetLeft-e+"px"}function i(){document.onmouseup=null,document.onmousemove=null}elements.tierlistItemDrag.onmousedown=function(e){(e=e||window.event).preventDefault(),n=e.clientX,a=e.clientY,document.onmouseup=i,document.onmousemove=r}}function onYouTubeIframeAPIReady(){elements.left_value.addEventListener("mouseover",(e=>{try{left_player.getPlayerState()>=1&&right_player.getPlayerState()>=1&&(right_player.mute(),left_player.unMute())}catch(e){}})),elements.right_value.addEventListener("mouseover",(e=>{try{left_player.getPlayerState()>=1&&right_player.getPlayerState()>=1&&(left_player.mute(),right_player.unMute())}catch(e){}}))}window.onload=async function(){darkTheme="true"===(localStorage.getItem("darkTheme")||"true"),elements.darkTheme.checked=darkTheme??!0,switchTheme(elements.darkTheme.checked),loadAndConnect(),USER.channel||(loginButton=new bootstrap.Popover(elements.loginButton)),enableTooltips(),enablePopovers(),document.addEventListener("click",(e=>{!elements.left_card.contains(e.target)&&elements.left_card.classList.contains("zoomed")&&(elements.left_card.classList.remove("zoomed"),elements.left_card_zoom_icon.innerHTML="zoom_in",anime({targets:"#left_card",translateX:"-=50%",scale:"-=0.6"})),!elements.right_card.contains(e.target)&&elements.right_card.classList.contains("zoomed")&&(elements.right_card.classList.remove("zoomed"),elements.right_card_zoom_icon.innerHTML="zoom_in",anime({targets:"#right_card",translateX:"+=50%",scale:"-=0.6"}))})),votePopover=new bootstrap.Popover(elements.enableVoting),votePopoverTierlist=new bootstrap.Popover(elements.enableVotingTierlist),loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),deleteBracketModal=new bootstrap.Modal(elements.deleteBracketModal),quitBracketModal=new bootstrap.Modal(elements.quitBracketModal),tierlistEditorModal=new bootstrap.Modal(elements.tierlistEditorModal),previewModal=new bootstrap.Modal(elements.previewModal),generateModal=new bootstrap.Modal(elements.generateModal),browseModal=new bootstrap.Modal(elements.browseModal),startModal=new bootstrap.Modal(elements.startModal),elements.tierlistEditorModal.addEventListener("show.bs.modal",(e=>{loadTierlistEditor()})),elements.quitBracketModal.addEventListener("hidden.bs.modal",(e=>{})),elements.generateModal.addEventListener("hidden.bs.modal",(e=>{previewedBracket=[],previewedBracketDescription="",previewedBracketTitle="";for(let e of document.getElementsByClassName("generate-type"))e.style.display="none";for(let e of document.getElementsByClassName("generate-value"))e.value="";for(let e of document.getElementsByClassName("generate-preview"))e.innerHTML=""})),elements.channelName.addEventListener("keydown",(e=>{"Enter"===e.key&&connect()})),elements.darkTheme.onchange=function(){switchTheme(this.checked),saveSettings()},elements.generateBracketType.onchange=function(){for(let e of document.getElementsByClassName("generate-type"))e.style.display="none";elements[`${this.value}Settings`].style.display=""},elements.hideScore.addEventListener("click",(function(){bootstrap.Tooltip.getInstance("#hideScore").setContent({".tooltip-inner":scoreHidden?"Hide score":"Show score"}),hideScore()})),elements.hideScoreTierlist.addEventListener("click",(function(){bootstrap.Tooltip.getInstance("#hideScoreTierlist").setContent({".tooltip-inner":scoreHidden?"Hide score":"Show score"}),hideScore()})),elements.connectbtn.addEventListener("click",(function(){connect()})),elements.loginExpiredRenew.addEventListener("click",(function(){login()})),elements.loginButton.addEventListener("click",(function(){login()})),elements.loginExpiredReset.addEventListener("click",(function(){resetSettings()})),elements.createBracket.addEventListener("click",(function(){createBracket(),enableTooltips()})),elements.importBracket.addEventListener("click",(function(){previewedBracket=[],previewedBracketDescription="",previewedBracketTitle="";for(let e of document.getElementsByClassName("generate-type"))e.style.display="none";for(let e of document.getElementsByClassName("generate-value"))e.value="";for(let e of document.getElementsByClassName("generate-preview"))e.innerHTML="";generateModal.show()})),elements.browseBracket.addEventListener("click",(function(){})),elements.addOption.addEventListener("click",(function(){addOption(),saveBracket()})),elements.deleteBracketButton.addEventListener("click",(function(){let e=parseInt(this.dataset.bracketId,10);BRACKETS.brackets.splice(BRACKETS.brackets.findIndex((t=>t.id===e)),1),loadBrackets(),saveSettings(),elements.bracketEditor.style.display="none",deleteBracketModal.hide(),enableTooltips()})),elements.bracketTitle.addEventListener("change",(function(){saveBracket()})),elements.bracketDescription.addEventListener("change",(function(){saveBracket()}));let e=document.createElement("script");e.src="https://www.youtube.com/iframe_api";let t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t),dragElement()},window.onSpotifyIframeApiReady=e=>{};