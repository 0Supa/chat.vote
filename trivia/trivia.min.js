let client,loginExpiredModal,points,numberOfOptions=2,answer="",started=!1,users=[],answered=[],questionsArray=[],answersArray=[],imagesArray=[],questionNumber=1,elements={loginExpiredModal:document.getElementById("loginExpiredModal"),twitchStatus:document.getElementById("twitchStatus"),topRight:document.getElementById("topRight"),start:document.getElementById("start"),showAnswer:document.getElementById("showAnswer"),next:document.getElementById("next"),questionNumber:document.getElementById("questionNumber"),optionsDiv:document.getElementById("optionsDiv"),toastContainer:document.getElementById("toastContainer"),usersDiv:document.getElementById("usersDiv"),users:document.getElementById("users"),question:document.getElementById("question"),showHint:document.getElementById("showHint"),points:document.getElementById("points"),firstOnly:document.getElementById("firstOnly"),multipleChoice:document.getElementById("multipleChoice")},USER={channel:"",twitchLogin:!1,access_token:"",userID:""},TRIVIA={questions:[],answers:[],images:[]};function load_localStorage(){if(localStorage.getItem("USER")?USER=JSON.parse(localStorage.getItem("USER")):console.log("localStorage user info not found"),localStorage.getItem("TRIVIA")){TRIVIA=JSON.parse(localStorage.getItem("TRIVIA")),console.log(TRIVIA);for(let e=0;e<TRIVIA.questions.length-2;e++)addInput();let e=[...document.querySelectorAll(".questions")],t=[...document.querySelectorAll(".answers")];document.querySelectorAll(".poll-image");for(let n=0;n<TRIVIA.questions.length;n++)e[n].value=`${TRIVIA.images[n]} ${TRIVIA.questions[n]}`.trim(),t[n].value=TRIVIA.answers[n].trim()}else console.log("localStorage trivia not found")}function saveSettings(){let e=[...document.querySelectorAll(".questions")],t=[...document.querySelectorAll(".answers")],n=[...document.querySelectorAll(".poll-image")];TRIVIA.questions=[],TRIVIA.answers=[],TRIVIA.images=[];for(let s=0;s<e.length;s++)(e[s].value||t[s].value||n[s].value)&&(TRIVIA.questions.push(e[s].value),TRIVIA.answers.push(t[s].value),TRIVIA.images.push(n[s].dataset.imageUrl));console.log(TRIVIA),localStorage.setItem("TRIVIA",JSON.stringify(TRIVIA))}function resetSettings(){return localStorage.setItem("TRIVIA",JSON.stringify({questions:[],answers:[],images:[]})),location.reload(),!1}async function start(){elements.start.style.display="none",elements.showAnswer.style.display="",elements.next.style.display="",points=parseInt(elements.points.value,10),started=!0,questionNumber=1,answered=[],users=[],elements.users.innerHTML="";let e=[...document.querySelectorAll(".questions")],t=[...document.querySelectorAll(".answers")],n=[...document.querySelectorAll(".poll-image")];questionsArray=[],answersArray=[],imagesArray=[];for(let s=0,o=e.length;s<o;s++){if(!e[s].value&&!n[s].dataset.imageUrl)continue;!e[s].value&&n[s].dataset.imageUrl?questionsArray.push(`Question #${s+1} with image`):questionsArray.push(e[s].value),imagesArray.push(n[s].dataset.imageUrl);let o=t[s].value.split("|");for(let e=0;e<o.length;e++)o[e]=o[e].trim().toLowerCase();answersArray.push(o)}answer=answersArray[questionNumber-1],elements.questionNumber.innerText=`Question 1/${questionsArray.length}`;let s=imagesArray[questionNumber-1]?`<div class="resizable"><img src="${imagesArray[questionNumber-1]}" alt="question image"/></div>`:"";elements.question.innerHTML=`${s}<br>Question: ${questionsArray[questionNumber-1]}<br><span id="answer">${getHint()}</span>`}function next(){if(points=parseInt(elements.points.value,10),questionNumber++,answered=[],started=!0,answer=answersArray[questionNumber-1],!questionsArray[questionNumber-1])return void showToast("no more questions","danger",5e3);if(!answer[0])return void showToast("question has no answer","danger",5e3);elements.questionNumber.innerText=`Question ${questionNumber}/${questionsArray.length}`;let e=imagesArray[questionNumber-1]?`<div class="resizable"><img src="${imagesArray[questionNumber-1]}" alt="question image" /></div>`:"";elements.question.innerHTML=`${e}<br>Question: ${questionsArray[questionNumber-1]}<br><span id="answer">${getHint()}</span>`}let correctChoice,correctAnswer,choices=["a","b","c","d"];function getHint(){if(elements.multipleChoice.checked){answer.length<4&&showToast("Question has less than 4 choices","danger",3e3),correctAnswer=answer[0];let e=shuffle(structuredClone(answer)),t=e.findIndex((e=>e===correctAnswer));return correctChoice=choices[t],`Choices:<br>\n    <button type="button" class="btn btn-lg btn-primary"><span class="float-start">A •</span> ${e[0]}</button>\n    <button type="button" class="btn btn-lg btn-danger"><span class="float-start">B •</span> ${e[1]}</button><br>\n    <button type="button" class="btn btn-lg btn-warning mt-2"><span class="float-start">C •</span> ${e[2]}</button>\n    <button type="button" class="btn btn-lg btn-info mt-2"><span class="float-start">D •</span> ${e[3]}</button>`}if(!elements.showHint.checked)return"Answer: ?";let e="";for(let t=0;t<answer[0].length;t++)answer[0].charAt(t).match(/^[0-9a-z]+$/)&&(e+="_ ")," "==answer[0].charAt(t)&&(e+="&nbsp; ");return e}function showAnswer(){started=!1,elements.multipleChoice.checked?document.getElementById("answer").innerHTML=`Answer: ${correctAnswer}`:document.getElementById("answer").innerHTML=`Answer: ${answer[0]}`}async function loadAndConnect(){load_localStorage();const e=new Proxy(new URLSearchParams(window.location.search),{get:(e,t)=>e.get(t)});if(channel=e.channel||USER.channel,USER.twitchLogin&&!await checkToken(USER.access_token))return USER.channel="",void loginExpiredModal.show();USER.channel&&connect()}function logout(){elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n      <a role="button" id="loginButton" onclick="login()" class="btn btn-twitch" tabindex="0" data-bs-container="body" data-bs-trigger="manual" data-bs-placement="bottom" data-bs-toggle="popover" data-bs-title="Not signed in" data-bs-content="You need sign in first before adding options or enabling voting/suggestions/raffle"><span class="twitch-icon"></span>Sign in with Twitch</a>\n      <div class="btn-group" role="group">\n          <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n        </button>\n          <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDropLogin">\n              <li><a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#modal1" href="#">Connect manually</a></li>\n          </ul>\n      </div>\n  </div>',resetSettings()}function deleteImage(e){let t=[...document.querySelectorAll(".poll-image")],n=[...document.querySelectorAll(".remove-image")],s=t.findIndex((t=>parseInt(t.dataset.optionId,10)===parseInt(e.target.dataset.optionId,10)));-1!=s&&(t[s].innerHTML="",t[s].dataset.imageUrl="",t[s].style.display="none",n[s].style.display="none")}function deleteInput(e){let t=[...document.querySelectorAll(".option-card")],n=t.findIndex((t=>parseInt(t.dataset.optionId,10)===parseInt(e.target.dataset.optionId,10)));-1!=n&&(t.length>2?t[n].remove():showToast("You can't have less than 2 questions","danger",3e3))}function addInput(e=!0){elements.optionsDiv.insertAdjacentHTML("beforeend",`<div class="card option-card" data-option-id="${++numberOfOptions}">\n      <div class="card-body">\n        <div class="input-group">\n          <input type="text" class="form-control questions" onkeydown="handleInput(event)" data-option-id="${numberOfOptions}" placeholder="Question" aria-label="Question" />\n          <input type="password" class="form-control answers" onkeydown="handleInput(event)" data-option-id="${numberOfOptions}" placeholder="Answer" aria-label="Answer" />\n          <span class="input-group-text poll-image" data-option-id="${numberOfOptions}" data-image-url="" style="display: none"> </span>\n          <button type="button" class="remove-image btn btn-warning" onclick="deleteImage(event)" data-option-id="${numberOfOptions}" style="display: none">\n            <i data-option-id="${numberOfOptions}" class="material-icons notranslate">hide_image</i>\n          </button>\n          <button type="button" class="remove-input btn btn-danger" onclick="deleteInput(event)" data-option-id="${numberOfOptions}">\n            <i class="material-icons notranslate" data-option-id="${numberOfOptions}">delete_forever</i>\n          </button>\n        </div>\n      </div>\n    </div>`),e&&selectNextInput(numberOfOptions-1)}function selectNextInput(e){let t=[...document.querySelectorAll(".questions")],n=t.findIndex((t=>parseInt(t.dataset.optionId,10)===e));n+1==t.length?addInput():-1!=n&&(t[n+1].focus(),t[n+1].select())}async function handleInput(e){let t=parseInt(e.target.dataset.optionId,10);if("Tab"===e.key&&e.preventDefault(),("ArrowUp"===e.key||"Tab"===e.key&&e.shiftKey)&&selectPreviousInput(t),("Enter"===e.key||"ArrowDown"===e.key||"Tab"===e.key&&!e.shiftKey)&&(selectNextInput(t),e.target.value.startsWith("http"))){let n=e.target.value,s={method:"GET",headers:{},redirect:"follow"};try{if((await fetch(`https://helper.donk.workers.dev/cors/?${n.split(" ")[0]}`,s)).headers.get("Content-Type").startsWith("image")){let e=[...document.querySelectorAll(".poll-image")],s=[...document.querySelectorAll(".questions")],o=[...document.querySelectorAll(".remove-image")],a=e.findIndex((e=>parseInt(e.dataset.optionId,10)===t));-1!=a&&(e[a].innerHTML=`<div class="resizable"><img src="${n.split(" ")[0]}"></div>`,e[a].dataset.imageUrl=n.split(" ")[0],e[a].style.display="block",o[a].style.display="block",s[a].value=n.split(" ").slice(1).join(""))}}catch(e){console.log(e)}}let n=[...document.querySelectorAll(".questions")];e.target.dataset.optionId==n[n.length-1].dataset.optionId&&e.target.value&&addInput(!1)}function selectPreviousInput(e){let t=[...document.querySelectorAll(".questions")],n=t.findIndex((t=>parseInt(t.dataset.optionId,10)===e));-1!=n&&0!=n&&(t[n-1].focus(),t[n-1].select())}function shuffle(e){let t,n=e.length;for(;n>0;)t=Math.floor(Math.random()*n),n--,[e[n],e[t]]=[e[t],e[n]];return e}function connect(){elements.twitchStatus.innerHTML='\n    <h4>\n    <span class="badge bg-warning">Connecting... \n    <div class="spinner-border" style="width:18px;height:18px;" role="status"><span class="visually-hidden">Loading...</span></div>\n    </span>\n    </h4>',elements.topRight.innerHTML='\n    <div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n    <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>\n    <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n    <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n    </ul>\n    </div>\n    </div>',loadBadges(USER.channel);let e={options:{clientId:CLIENT_ID,debug:!1},connection:{secure:!0,reconnect:!0},channels:[USER.channel]};client=new tmi.client(e),client.on("message",(async(e,t,n,s)=>{if(!started)return;if(answered.includes(t.username))return;if(points<1)return;if(elements.multipleChoice.checked){if(n.trim().toLowerCase()!==correctChoice)return}else if(!answer.includes(n.trim().toLowerCase()))return;let o=users.findIndex((e=>e.username===t.username));if(-1!=o)users[o].points+=points,points--,answered.push(t.username),updateList();else{let e={points:points,id:t["user-id"],username:t.username,displayname:t["display-name"],color:t.color,firstmsg:t["first-msg"],badges:t.badges};points--,addUser(e),answered.push(t.username)}elements.firstOnly.checked&&(points=0)})),client.on("connected",((e,t)=>{console.log(`Connected to ${e}:${t}`),elements.twitchStatus.innerHTML='<h4><span class="badge bg-success">Connected :)</span></h4>',sendUsername("chat.vote/trivia",USER.channel,"twitch"),loadPFP()})),client.on("disconnected",(e=>{elements.twitchStatus.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${e}</span></h4>`})),client.on("notice",((e,t,n)=>{elements.twitchStatus.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${n}</span></h4>`})),client.connect().catch(console.error)}function addUser(e){e.badgeshtml=addBadges(e.badges,e.id,e.firstmsg),e.name=e.username==e.displayname.toLowerCase()?`${e.displayname}`:`${e.displayname} (${e.username})`,e.color=e.color?e.color:"#FFFFFF",users.push(e),updateList()}function updateList(){users.sort((function(e,t){return e.points>t.points?-1:e.points==t.points?0:1})),elements.users.innerHTML="";let e="";for(let t=0,n=users.length;t<n;t++)e+=`\n    <li class="list-group-item">\n    ${users[t].badgeshtml}<span style="color:${users[t].color};">${users[t].name}:</span>\n    ${users[t].points} ${1==users[t].points?"point":"points"}\n    </li>`;elements.users.innerHTML=e}async function loadPFP(){if(!USER.channel)return void(elements.topRight.innerHTML='\n      <div class="btn-group" role="group" aria-label="log in button group">\n      <a role="button" id="loginButton" onclick="login()" class="btn btn-twitch" tabindex="0" data-bs-container="body" data-bs-custom-class="custom-popover" data-bs-trigger="manual" data-bs-placement="bottom" data-bs-toggle="popover" data-bs-title="Not signed in" data-bs-content="You need sign in first before adding options or enabling voting/suggestions/raffle"><span class="twitch-icon"></span>Sign in with Twitch</a>\n      <div class="btn-group" role="group">\n      <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>\n      <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDropLogin">\n      <li><a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#modal1" href="#">Connect manually</a></li>\n      </ul>\n      </div>\n      </div>');let e=await get7TVPFP(USER.userID);"/pics/donk.png"==e&&USER.access_token&&(e=await getTwitchPFP(USER.channel,USER.access_token)),elements.topRight.innerHTML=`\n    <div class="btn-group" role="group" aria-label="Button group with nested dropdown">\n    <button type="button" class="btn btn-dark"><img src="${e}" alt="profile pic" style="height:2em;"></button>\n    <div class="btn-group" role="group">\n    <button id="btnGroupDrop1" type="button" class="btn btn-dark dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n    ${USER.channel}\n    </button>\n    <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n    <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n    </ul>\n    </div>\n    </div>`}function hideAnswers(){let e=document.querySelectorAll(".answers");for(let t=0;t<e.length;t++)"text"==e[t].type?e[t].type="password":e[t].type="text"}window.onload=function(){loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),loadAndConnect(),USER.channel||loginExpiredModal.show(),enableTooltips(),enablePopovers()};