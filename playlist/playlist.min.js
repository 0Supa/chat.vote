let client,loginButton,settingsOffcanvas,loginExpiredModal,resetSettingsModal,clearPlaylistModal,copyLinkButton,playlistTab,approvalTab,historyTab,togglePlaylistPopover,elements={loginExpiredModal:document.getElementById("loginExpiredModal"),resetSettingsModal:document.getElementById("resetSettingsModal"),clearPlaylistModal:document.getElementById("clearPlaylistModal"),vtsLink:document.getElementById("vtsLink"),status:document.getElementById("status"),topRight:document.getElementById("topRight"),loginButton:document.getElementById("loginButton"),channelName:document.getElementById("channelName"),darkTheme:document.getElementById("darkTheme"),settingsOffcanvas:document.getElementById("settingsOffcanvas"),allowSpotifySongs:document.getElementById("allowSpotifySongs"),allowStreamable:document.getElementById("allowStreamable"),allowTwitchClips:document.getElementById("allowTwitchClips"),allowTwitchStreams:document.getElementById("allowTwitchStreams"),allowTwitchVODs:document.getElementById("allowTwitchVODs"),allowYTStreams:document.getElementById("allowYTStreams"),allowYTShorts:document.getElementById("allowYTShorts"),allowYTVideos:document.getElementById("allowYTVideos"),maxDuration:document.getElementById("maxDuration"),maxDurationUnit:document.getElementById("maxDurationUnit"),maxLength:document.getElementById("maxLength"),maxSize:document.getElementById("maxSize"),whoCanRequest:document.getElementById("whoCanRequest"),allowPlebs:document.getElementById("allowPlebs"),allowSubs:document.getElementById("allowSubs"),allowMods:document.getElementById("allowMods"),allowVips:document.getElementById("allowVips"),allowFirstTimeChatters:document.getElementById("allowFirstTimeChatters"),plebLimit:document.getElementById("plebLimit"),subLimit:document.getElementById("subLimit"),modLimit:document.getElementById("modLimit"),vipLimit:document.getElementById("vipLimit"),firstTimeChatterLimit:document.getElementById("firstTimeChatterLimit"),selectAll:document.getElementById("selectAll"),unselectAll:document.getElementById("unselectAll"),noCommand:document.getElementById("noCommand"),requestCommand:document.getElementById("requestCommand"),requestCommandAlias:document.getElementById("requestCommandAlias"),allowVoteSkip:document.getElementById("allowVoteSkip"),voteskipCommand:document.getElementById("voteskipCommand"),voteskipCommandAlias:document.getElementById("voteskipCommandAlias"),voteskipCount:document.getElementById("voteskipCount"),enableBot:document.getElementById("enableBot"),botCooldown:document.getElementById("botCooldown"),songCommand:document.getElementById("songCommand"),songCommandAlias:document.getElementById("songCommandAlias"),playlistCommand:document.getElementById("playlistCommand"),playlistCommandAlias:document.getElementById("playlistCommandAlias"),approvalQueue:document.getElementById("approvalQueue"),skipCommand:document.getElementById("skipCommand"),modSkip:document.getElementById("modSkip"),minViewCount:document.getElementById("minViewCount"),toastContainer:document.getElementById("toastContainer"),playersCard:document.getElementById("playersCard"),placeholder:document.getElementById("placeholder"),youtubeEmbedContainer:document.getElementById("youtubeEmbedContainer"),youtubeEmbed:document.getElementById("youtubeEmbed"),spotifyEmbedContainer:document.getElementById("spotifyEmbedContainer"),spotifyEmbed:document.getElementById("spotifyEmbed"),twitchEmbed:document.getElementById("twitchEmbed"),twitchClipsEmbed:document.getElementById("twitchClipsEmbed"),streamableEmbed:document.getElementById("streamableEmbed"),commandHint:document.getElementById("commandHint"),commandHint2:document.getElementById("commandHint2"),togglePlaylist:document.getElementById("togglePlaylist"),togglePlaylistLabel:document.getElementById("togglePlaylistLabel"),playlistLength:document.getElementById("playlistLength"),resetPlaylist:document.getElementById("resetPlaylist"),link:document.getElementById("link"),addLink:document.getElementById("addLink"),playlistTab:document.getElementById("playlistTab"),approvalTabButton:document.getElementById("approvalTabButton"),approvalTab:document.getElementById("approvalTab"),mainList:document.getElementById("mainList"),approvalList:document.getElementById("approvalList"),historyTab:document.getElementById("historyTab"),historyList:document.getElementById("historyList"),profileLink:document.getElementById("profileLink"),copyLinkButton:document.getElementById("copyLinkButton"),previousItem:document.getElementById("previousItem"),togglePlay:document.getElementById("togglePlay"),nextItem:document.getElementById("nextItem"),volumeSliderIcon:document.getElementById("volumeSliderIcon"),volumeSlider:document.getElementById("volumeSlider"),volumeSliderValue:document.getElementById("volumeSliderValue")},color="",currentTime=0,playlist_open=!1,playlist_playing=!1,users=[],requests=[],history=[],firstTimeChatters=[],USER={channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""},PLAYLIST={allowSpotifySongs:!0,allowStreamable:!0,allowTwitchClips:!0,allowTwitchStreams:!0,allowTwitchVODs:!0,allowYTStreams:!0,allowYTShorts:!0,allowYTVideos:!0,maxDuration:"",maxDurationUnit:"m",maxLength:"",maxSize:"",allowPlebs:!0,allowSubs:!0,allowMods:!0,allowVips:!0,allowFirstTimeChatters:!0,plebLimit:1,subLimit:1,modLimit:1,vipLimit:1,firstTimeChatterLimit:1,noCommand:!1,requestCommand:"!request",requestCommandAlias:"!r",allowVoteSkip:!1,voteskipCommand:"!voteskip",voteskipCommandAlias:"!vs",voteskipCount:1,enableBot:!1,botCooldown:1,songCommand:"!song",songCommandAlias:"!s",playlistCommand:"!playlist",playlistCommandAlias:"!pl",approvalQueue:!1,skipCommand:"!skip",modSkip:!1,minViewCount:""};async function refreshData(){darkTheme=elements.darkTheme.checked??!0,USER.twitchLogin||(USER.channel=validator.escape(elements.channelName.value.replace(/\s+/g,"").toLowerCase()),USER.platform="twitch"),!USER.userID&&USER.channel&&(USER.userID=await getUserID(USER.channel)),PLAYLIST.allowSpotifySongs=elements.allowSpotifySongs.checked,PLAYLIST.allowStreamable=elements.allowStreamable.checked,PLAYLIST.allowTwitchClips=elements.allowTwitchClips.checked,PLAYLIST.allowTwitchStreams=elements.allowTwitchStreams.checked,PLAYLIST.allowTwitchVODs=elements.allowTwitchVODs.checked,PLAYLIST.allowYTStreams=elements.allowYTStreams.checked,PLAYLIST.allowYTShorts=elements.allowYTShorts.checked,PLAYLIST.allowYTVideos=elements.allowYTVideos.checked,PLAYLIST.maxDuration=parseInt(elements.maxDuration.value,10)||"",PLAYLIST.maxDurationUnit=elements.maxDurationUnit.value||"m",PLAYLIST.maxLength=parseInt(elements.maxLength.value,10)||"",PLAYLIST.maxSize=parseInt(elements.maxSize.value,10)||"",PLAYLIST.allowPlebs=elements.allowPlebs.checked,PLAYLIST.allowSubs=elements.allowSubs.checked,PLAYLIST.allowMods=elements.allowMods.checked,PLAYLIST.allowVips=elements.allowVips.checked,PLAYLIST.allowFirstTimeChatters=elements.allowFirstTimeChatters.checked,PLAYLIST.plebLimit=parseInt(elements.plebLimit.value,10)||1,PLAYLIST.subLimit=parseInt(elements.subLimit.value,10)||1,PLAYLIST.modLimit=parseInt(elements.modLimit.value,10)||1,PLAYLIST.vipLimit=parseInt(elements.vipLimit.value,10)||1,PLAYLIST.firstTimeChatterLimit=parseInt(elements.firstTimeChatterLimit.value,10)||1,PLAYLIST.noCommand=elements.noCommand.checked,PLAYLIST.requestCommand=elements.requestCommand.value.replace(/\s+/g,"").toLowerCase()||"!request",PLAYLIST.requestCommandAlias=elements.requestCommandAlias.value.replace(/\s+/g,"").toLowerCase()||"!r",PLAYLIST.allowVoteSkip=elements.allowVoteSkip.checked,PLAYLIST.voteskipCommand=elements.voteskipCommand.value.replace(/\s+/g,"").toLowerCase()||"!voteskip",PLAYLIST.voteskipCommandAlias=elements.voteskipCommandAlias.value.replace(/\s+/g,"").toLowerCase()||"!vs",PLAYLIST.voteskipCount=parseInt(elements.voteskipCount.value,10)||1,PLAYLIST.enableBot=elements.enableBot.checked,PLAYLIST.botCooldown=parseInt(elements.botCooldown.value,10)||1,PLAYLIST.songCommand=elements.songCommand.value.replace(/\s+/g,"").toLowerCase()||"!song",PLAYLIST.songCommandAlias=elements.songCommandAlias.value.replace(/\s+/g,"").toLowerCase()||"!s",PLAYLIST.playlistCommand=elements.playlistCommand.value.replace(/\s+/g,"").toLowerCase()||"!playlist",PLAYLIST.playlistCommandAlias=elements.playlistCommandAlias.value.replace(/\s+/g,"").toLowerCase()||"!pl",PLAYLIST.approvalQueue=elements.approvalQueue.checked,PLAYLIST.skipCommand=elements.skipCommand.value.replace(/\s+/g,"").toLowerCase()||"!skip",PLAYLIST.modSkip=elements.modSkip.checked,PLAYLIST.minViewCount=parseInt(elements.minViewCount.value,10)||"",elements.voteskipCommand.disabled=!PLAYLIST.allowVoteSkip,elements.voteskipCommandAlias.disabled=!PLAYLIST.allowVoteSkip,elements.voteskipCount.disabled=!PLAYLIST.allowVoteSkip,elements.botCooldown.disabled=!PLAYLIST.enableBot,elements.songCommand.disabled=!PLAYLIST.enableBot,elements.songCommandAlias.disabled=!PLAYLIST.enableBot,elements.playlistCommand.disabled=!PLAYLIST.enableBot,elements.playlistCommandAlias.disabled=!PLAYLIST.enableBot,elements.approvalTabButton.style.display=PLAYLIST.approvalQueue?"":"none",PLAYLIST.noCommand?(elements.commandHint.innerHTML="Add songs or videos to the playlist by posting a link in chat",elements.commandHint2.innerHTML="Request something by posting a link in chat"):(elements.commandHint.innerHTML=`Add songs or videos to the playlist using \n    <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand()">${PLAYLIST.requestCommand} [link]</kbd> or \n    <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand(true)">${PLAYLIST.requestCommandAlias} [link]</kbd>`,elements.commandHint2.innerHTML=`Request something using \n    <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand()">${PLAYLIST.requestCommand} [link]</kbd> or \n    <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand(true)">${PLAYLIST.requestCommandAlias} [link]</kbd>`),updateWhoCanRequest(),checkCommands()}function saveSettings(){refreshData(),localStorage.setItem("USER",JSON.stringify(USER)),localStorage.setItem("PLAYLIST",JSON.stringify(PLAYLIST)),localStorage.setItem("darkTheme",darkTheme)}function load_localStorage(){localStorage.getItem("USER")?(USER=JSON.parse(localStorage.getItem("USER")),elements.channelName.value=USER.channel):console.log("localStorage user info not found"),localStorage.getItem("PLAYLIST")?(PLAYLIST=JSON.parse(localStorage.getItem("PLAYLIST")),elements.allowSpotifySongs.checked=PLAYLIST.allowSpotifySongs??!0,elements.allowStreamable.checked=PLAYLIST.allowStreamable??!0,elements.allowTwitchClips.checked=PLAYLIST.allowTwitchClips??!0,elements.allowTwitchStreams.checked=PLAYLIST.allowTwitchStreams??!0,elements.allowTwitchVODs.checked=PLAYLIST.allowTwitchVODs??!0,elements.allowYTStreams.checked=PLAYLIST.allowYTStreams??!0,elements.allowYTShorts.checked=PLAYLIST.allowYTShorts??!0,elements.allowYTVideos.checked=PLAYLIST.allowYTVideos??!0,elements.maxDuration.value=PLAYLIST.maxDuration||"",elements.maxDurationUnit.value=PLAYLIST.maxDurationUnit||"m",elements.maxLength.value=PLAYLIST.maxLength||"",elements.maxSize.value=PLAYLIST.maxSize||"",elements.allowPlebs.checked=PLAYLIST.allowPlebs??!0,elements.allowSubs.checked=PLAYLIST.allowSubs??!0,elements.allowMods.checked=PLAYLIST.allowMods??!0,elements.allowVips.checked=PLAYLIST.allowVips??!0,elements.allowFirstTimeChatters.checked=PLAYLIST.allowFirstTimeChatters??!0,elements.plebLimit.value=PLAYLIST.plebLimit||1,elements.subLimit.value=PLAYLIST.subLimit||1,elements.modLimit.value=PLAYLIST.modLimit||1,elements.vipLimit.value=PLAYLIST.vipLimit||1,elements.firstTimeChatterLimit.value=PLAYLIST.firstTimeChatterLimit||1,elements.noCommand.checked=PLAYLIST.noCommand??!1,elements.requestCommand.value=PLAYLIST.requestCommand||"!request",elements.requestCommandAlias.value=PLAYLIST.requestCommandAlias||"!r",elements.allowVoteSkip.checked=PLAYLIST.allowVoteSkip??!1,elements.voteskipCommand.value=PLAYLIST.voteskipCommand||"!voteskip",elements.voteskipCommandAlias.value=PLAYLIST.voteskipCommandAlias||"!vs",elements.voteskipCount.value=PLAYLIST.voteskipCount||1,elements.enableBot.checked=PLAYLIST.enableBot??!1,elements.botCooldown.value=PLAYLIST.botCooldown||1,elements.songCommand.value=PLAYLIST.songCommand||"!song",elements.songCommandAlias.value=PLAYLIST.songCommandAlias||"!s",elements.playlistCommand.value=PLAYLIST.playlistCommand||"!playlist",elements.playlistCommandAlias.value=PLAYLIST.playlistCommandAlias||"!pl",elements.approvalQueue.checked=PLAYLIST.approvalQueue??!1,elements.skipCommand.value=PLAYLIST.skipCommand||"!skip",elements.modSkip.checked=PLAYLIST.modSkip??!1,elements.minViewCount.value=PLAYLIST.minViewCount||"",elements.voteskipCommand.disabled=!PLAYLIST.allowVoteSkip,elements.voteskipCommandAlias.disabled=!PLAYLIST.allowVoteSkip,elements.voteskipCount.disabled=!PLAYLIST.allowVoteSkip,elements.botCooldown.disabled=!PLAYLIST.enableBot,elements.songCommand.disabled=!PLAYLIST.enableBot,elements.songCommandAlias.disabled=!PLAYLIST.enableBot,elements.playlistCommand.disabled=!PLAYLIST.enableBot,elements.playlistCommandAlias.disabled=!PLAYLIST.enableBot,elements.approvalTabButton.style.display=PLAYLIST.approvalQueue?"":"none",PLAYLIST.noCommand?(elements.commandHint.innerHTML="Add songs or videos to the playlist by posting a link in chat",elements.commandHint2.innerHTML="Request something by posting a link in chat"):(elements.commandHint.innerHTML=`Add songs or videos to the playlist using \n      <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand()">${PLAYLIST.requestCommand}</kbd> or \n      <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand(true)">${PLAYLIST.requestCommandAlias}</kbd>`,elements.commandHint2.innerHTML=`Request something using \n      <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand()">${PLAYLIST.requestCommand} [link]</kbd> or \n      <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand(true)">${PLAYLIST.requestCommandAlias} [link]</kbd>`),updateWhoCanRequest(),checkCommands()):console.log("localStorage settings not found")}function resetSettings(e=!1){return e&&localStorage.setItem("USER",JSON.stringify({channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""})),localStorage.setItem("PLAYLIST",JSON.stringify({allowSpotifySongs:!0,allowStreamable:!0,allowTwitchClips:!0,allowTwitchStreams:!0,allowTwitchVODs:!0,allowYTStreams:!0,allowYTShorts:!0,allowYTVideos:!0,maxDuration:"",maxDurationUnit:"m",maxLength:"",maxSize:"",allowPlebs:!0,allowSubs:!0,allowMods:!0,allowVips:!0,allowFirstTimeChatters:!0,plebLimit:1,subLimit:1,modLimit:1,vipLimit:1,firstTimeChatterLimit:1,noCommand:!1,requestCommand:"!request",requestCommandAlias:"!r",allowVoteSkip:!1,voteskipCommand:"!voteskip",voteskipCommandAlias:"!vs",voteskipCount:1,enableBot:!1,botCooldown:1,songCommand:"!song",songCommandAlias:"!s",playlistCommand:"!playlist",playlistCommandAlias:"!pl",approvalQueue:!1,skipCommand:"!skip",modSkip:!1,minViewCount:""})),location.reload(),!1}function login(){return elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n        <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n      </button>\n        <ul class="dropdown-menu dropdown-menu-lg-end" aria-label="Log out">\n            <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n        </ul>\n    </div>\n</div>',window.open("/prompt.html","loginWindow","toolbar=0,status=0,scrollbars=0,width=500px,height=800px"),!1}function connect(){elements.status.innerHTML='\n  <h4>\n  <span class="badge bg-warning">Connecting... \n  <div class="spinner-border" style="width:18px;height:18px;" role="status"><span class="visually-hidden">Loading...</span></div>\n  </span>\n  </h4>',elements.topRight.innerHTML='\n  <div class="btn-group" role="group" aria-label="log in button group">\n  <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n  <div class="btn-group" role="group">\n  <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>\n  <ul class="dropdown-menu dropdown-menu-lg-end" aria-label="Log out">\n  <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n  </ul>\n  </div>\n  </div>',refreshData(),loadBadges(USER.channel);let e={options:{clientId:CLIENT_ID,debug:!1},connection:{secure:!0,reconnect:!0},channels:[USER.channel]};client=new tmi.client(e),client.on("message",(async(e,t,n,l)=>{t["first-msg"]&&firstTimeChatters.push(t.username);let o=n.split(" ").filter(Boolean);if(PLAYLIST.noCommand&&playlist_open){let e=parseLink(o[0]);if(!e||!linkTypeAllowed(e.type))return;addRequest(t,e)}else switch(o[0].toLowerCase()){case PLAYLIST.requestCommand:case PLAYLIST.requestCommandAlias:if(!o[1])return;if(!playlist_open&&(Date.now()-currentTime)/1e3>10)return currentTime=Date.now(),togglePlaylistPopover.show(),void setTimeout((function(){togglePlaylistPopover.hide()}),2e3);let e=parseLink(o[1]);if(!e||!linkTypeAllowed(e.type))return;addRequest(t,e);break;case PLAYLIST.voteskipCommand:case PLAYLIST.voteskipCommandAlias:break;case PLAYLIST.songCommand:case PLAYLIST.songCommandAlias:break;case PLAYLIST.playlistCommand:case PLAYLIST.playlistCommandAlias:break;case PLAYLIST.skipCommand:break;default:break}})),client.on("timeout",((e,t,n,l,o)=>{})),client.on("connected",(async(e,t)=>{console.log(`Connected to ${e}:${t}`),elements.status.innerHTML='<h4><span class="badge bg-success">Connected :)</span></h4>',saveSettings(),sendUsername("chat.vote/playlist",USER.channel,"twitch"==USER.platform?`twitch - ${USER.twitchLogin}`:"youtube"),await checkTags(USER.userID,USER.access_token)&&(elements.vtsLink.style.display=""),loadPFP()})),client.on("disconnected",(e=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${e}</span></h4>`})),client.on("notice",((e,t,n)=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${n}</span></h4>`})),client.connect().catch(console.error)}function getUser(e){const t=users.findIndex((t=>t.id===e["user-id"]));return-1==t?(users.push({id:e["user-id"],username:e.username,mod:e?.mod||!1,sub:e?.subscriber||!1,vip:e?.vip||!1,firstTimeChatter:firstTimeChatters.includes(e.username),requestsCount:0,requestsDuration:0,requests:[]}),users.length-1):t}function checkRequestLimit(e){let t=0;return!users[e].sub&&PLAYLIST.allowPlebs&&(t=Math.max(t,PLAYLIST.plebLimit)),users[e].sub&&PLAYLIST.allowSubs&&(t=Math.max(t,PLAYLIST.subLimit)),users[e].mod&&PLAYLIST.allowMods&&(t=Math.max(t,PLAYLIST.modLimit)),users[e].vip&&PLAYLIST.allowVips&&(t=Math.max(t,PLAYLIST.vipLimit)),users[e].firstTimeChatter&&PLAYLIST.allowFirstTimeChatters&&(t=Math.max(t,PLAYLIST.firstTimeChatterLimit)),t}function addRequest(e,t){const n=getUser(e),l=checkRequestLimit(n);if(!l||users[n].requestsCount>=l)return;if(users[n].requests.some((e=>e===t.id)))return;users[n].requestsCount++,users[n].requests.push(t.id);const o=requests.findIndex((e=>e.id===t.id));if(o>-1)requests[o].by.push(e.username),updatePlaylist(o);else{requests.push({id:t.id,type:t.type,approved:!PLAYLIST.approvalQueue,title:"",duration:0,views:0,thumbnail:"",time:Date.now(),by:[e.username]});let n=requests.length-1;addToPlaylist(n),getRequestInfo(n)}updateLength()}function deleteRequest(e,t=!0){const n=requests.findIndex((t=>t.id===e));if(t){for(let t=0;t<requests[n].by.length;t++){const l=users.findIndex((e=>e.username===requests[n].by[t]));users[l].requestsCount--,users[l].requests.splice(users[l].requests.findIndex((function(t){return t.value===e})),1)}requests.splice(n,1)}document.getElementById(`id${e}`).remove(),updateLength()}function clearPlaylist(){playlist_playing=!1,users=[],requests=[],history=[],resetPlayers(),elements.mainList.innerHTML="",elements.placeholder.style.display="",updateLength()}function updateLength(){const e=requests.length,t=requests.reduce(((e,t)=>-1==t.duration?e:e+t.duration),0);elements.playlistLength.innerHTML=`${secondsToTimeString(Math.round(t))||"00:00"} (${e} ${1==e?"item":"items"})`}function addToPlaylist(e,t="beforeend"){elements.mainList.insertAdjacentHTML(t,`<div class="container-fluid p-0 mb-1" id="id${requests[e].id}">\n        <div class="row g-1">\n          <div class="col-auto thumbnail-div">\n            <div id="id${requests[e].id}_thumbnail" class="request-thumbnail">\n              <p class="placeholder-glow" style="width: 160px; height: 90px">\n                <span class="placeholder col-12 rounded" style="height: 100%"></span>\n              </p>\n            </div>\n            <span class="badge text-bg-dark duration-label" id="id${requests[e].id}_duration">00:00</span>\n          </div>\n          <div class="col">\n            <div class="vstack gap-3">\n              <div class="request-title" id="id${requests[e].id}_title" >\n                <span class="placeholder-glow">\n                  <span class="placeholder col-12"></span>\n                </span>\n              </div>\n              <div><small class="requested-by text-body-secondary" id="id${requests[e].id}_by" >Requested by: ${requests[e].by.join(" & ")}</small></div>\n            </div>\n          </div>\n          <div class="col-auto" style="align-self: center"><i class="material-icons notranslate delete-request" onclick="deleteRequest('${requests[e].id}')">delete</i></div>\n        </div>\n      </div>`)}function updatePlaylist(e){requests[e].thumbnail&&requests[e].title?(document.getElementById(`id${requests[e].id}_thumbnail`).innerHTML=`<img src="${requests[e].thumbnail}" alt="thumbnail" class="rounded" />`,document.getElementById(`id${requests[e].id}_title`).innerText=requests[e].title,document.getElementById(`id${requests[e].id}_duration`).innerText=-1==requests[e].duration?"🔴live":secondsToTimeString(Math.round(requests[e].duration)),document.getElementById(`id${requests[e].id}_by`).innerText=`Requested by: ${requests[e].by.join(" & ")}`,playlist_playing||(playlist_playing=!0,nextItem())):document.getElementById(`id${requests[e].id}_by`).innerText=`Requested by: ${requests[e].by.join(" & ")}`}async function getRequestInfo(e){if(!requests[e].title){if("twitch clip"==requests[e].type)try{let t=await fetch(`https://helper.donk.workers.dev/twitch/clips?id=${requests[e].id}`,GETrequestOptions),n=await t.json();console.log(n),requests[e].title=`${n.data[0].title} - ${n.data[0].broadcaster_name}`||"(untitled)",requests[e].thumbnail=n.data[0].thumbnail_url,requests[e].duration=n.data[0].duration}catch(e){console.log("getRequestInfo twitch clip error",e)}if("twitch vod"==requests[e].type)try{let t=await fetch(`https://helper.donk.workers.dev/twitch/videos?id=${requests[e].id}`,GETrequestOptions),n=await t.json();console.log(n),requests[e].title=`${n.data[0].title} - ${n.data[0].user_login}`||"(untitled)",requests[e].thumbnail=n.data[0].thumbnail_url.replace("%{width}","320").replace("%{height}","180"),requests[e].duration=convertTwitchVODDuration(n.data[0].duration)}catch(e){console.log("getRequestInfo twitch vod error",e)}if("twitch stream"==requests[e].type)try{let t=await fetch(`https://helper.donk.workers.dev/twitch/streams?user_login=${requests[e].id}`,GETrequestOptions),n=await t.json();console.log(n),requests[e].title=`${n.data[0].title} - ${n.data[0].user_name}`||"(untitled)",requests[e].thumbnail=n.data[0].thumbnail_url.replace("{width}","320").replace("{height}","180"),requests[e].duration=-1}catch(e){console.log("getRequestInfo twitch stream error",e)}if("spotify"==requests[e].type)try{let t=await fetch(`https://helper.donk.workers.dev/spotify/tracks?ids=${requests[e].id}`,GETrequestOptions),n=await t.json();console.log(n),requests[e].title=`${n.tracks[0].name} - ${n.tracks[0].artists[0].name}`||"(untitled)",requests[e].thumbnail=n.tracks[0].album.images[0].url,requests[e].duration=n.tracks[0].duration_ms/1e3,requests[e].uri=n.tracks[0].uri}catch(e){console.log("getRequestInfo spotify error",e)}if("youtube"==requests[e].type)try{let t=await fetch(`https://helper.donk.workers.dev/youtube/videos?id=${requests[e].id}`,GETrequestOptions),n=await t.json();console.log(n),requests[e].title=`${n.items[0].snippet.title} - ${n.items[0].snippet.channelTitle}`||"(untitled)",requests[e].thumbnail=n.items[0].snippet.thumbnails.medium.url,requests[e].duration=ISO8601ToSeconds(n.items[0].contentDetails.duration),requests[e].views=n.items[0].statistics.viewCount}catch(e){console.log("getRequestInfo youtube error",e)}if("streamable"==requests[e].type)try{let t=await fetch(`https://helper.donk.workers.dev/streamable/videos?id=${requests[e].id}`,GETrequestOptions),n=await t.json();console.log(n),requests[e].title=n.title||"(untitled)",requests[e].thumbnail=n.thumbnail_url,requests[e].duration=n.files.mp4.duration,requests[e].video=n.files.mp4.url}catch(e){console.log("getRequestInfo streamable error",e)}updatePlaylist(e),updateLength()}}function parseLink(e){if(e.includes("twitch.tv")){if(e.includes("/clip/")||e.includes("clips.twitch.tv")){let t=new URL(e),n="clips.twitch.tv"===t.hostname?/^\/(\w+(?:\/[A-Z]\w+)?(?:[\-\w]*))(?:\/|$)/.exec(t.pathname):/^\/\w+\/clip\/(\w+(?:\/[A-Z]\w+)?(?:[\-\w]*))(?:\/|$)/.exec(t.pathname);return n&&n[1]?{type:"twitch clip",id:n[1]}:null}if(e.includes("/videos/")){const t=e.match(/\/videos\/(\d+)/);return t&&parseInt(t[1])?{type:"twitch vod",id:t[1]}:null}const t=e.match(/\/([a-zA-Z0-9_]{1,25})$/);return t?{type:"twitch stream",id:t[1]}:null}if(e.includes("youtube.com")||e.includes("youtu.be")){const t=/(youtu.*be.*)\/(watch\?v=|embed\/|v|shorts|)(.*?((?=[&#?])|$))/gm.exec(e)||null;return 11!=t[3]?.length?null:{type:"youtube",id:t[3]}}if(e.includes("spotify.com")){const t=/https?:\/\/(?:embed\.|open\.)(?:spotify\.com\/)(?:(album|track|playlist)\/|\?uri=spotify:track:)((\w|-){22})/;let n=e.match(t);return n[2]&&"track"===n[1]?{type:"spotify",id:n[2]}:null}if(e.includes("streamable.com")){const t=e.match(/streamable\.com\/([a-zA-Z0-9]+)/);return t[1]?{type:"streamable",id:t[1]}:null}return null}function linkTypeAllowed(e){return!("twitch clip"==e&&!PLAYLIST.allowTwitchClips)&&(!("twitch vod"==e&&!PLAYLIST.allowTwitchVODs)&&(!("twitch stream"==e&&!PLAYLIST.allowTwitchStreams)&&(!("spotify"==e&&!PLAYLIST.allowSpotifySongs)&&(!("streamable"==e&&!PLAYLIST.allowStreamable)&&!!("youtube"!=e||PLAYLIST.allowYTShorts||PLAYLIST.allowYTStreams||PLAYLIST.allowYTVideos)))))}function addLink(){let e=parseLink(elements.link.value.replace(/\s+/g,""));e&&linkTypeAllowed(e.type)&&(addRequest({"user-id":USER.userID,username:USER.channel,mod:!0,sub:!0,vip:!0,firstTimeChatter:!1},e),elements.link.value="")}function previousItem(){}function togglePlay(){}let currentItem,oldSliderValue,youtubePlayer,spotifyPlayer,twitchPlayer,playlistCooldown=!1;function nextItem(){if(!playlistCooldown){if(playlistCooldown=!0,elements.nextItem.disabled=!0,setTimeout((()=>{playlistCooldown=!1,elements.nextItem.disabled=!1}),1e3),currentItem=requests.shift(),console.log(currentItem),history.push(currentItem),resetPlayers(),!currentItem)return elements.placeholder.style.display="",void(playlist_playing=!1);deleteRequest(currentItem.id,!1),playItem(currentItem)}}function playItem(e){switch(e.type){case"youtube":elements.youtubeEmbedContainer.style.display="",youtubePlayer.loadVideoById(e.id);break;case"spotify":elements.spotifyEmbedContainer.style.display="",spotifyPlayer.loadUri(e.uri);break;case"twitch stream":elements.twitchEmbed.style.display="",twitchPlayer.setChannel(e.id);break;case"twitch vod":elements.twitchEmbed.style.display="",twitchPlayer.setVideo(e.id);break;case"twitch clip":elements.twitchClipsEmbed.style.display="",elements.twitchClipsEmbed.src=`https://clips.twitch.tv/embed?clip=${e.id}&parent=${window.location.hostname}&autoplay=true`;break;case"streamable":elements.streamableEmbed.style.display="",elements.streamableEmbed.src=e.video;break;default:break}}function resetPlayers(){elements.placeholder.style.display="none",elements.youtubeEmbedContainer.style.display="none",elements.spotifyEmbedContainer.style.display="none",elements.twitchEmbed.style.display="none",elements.twitchClipsEmbed.style.display="none",elements.streamableEmbed.style.display="none",youtubePlayer.loadVideoById(""),spotifyPlayer.pause(),twitchPlayer.setChannel(""),elements.twitchClipsEmbed.innerHTML="",elements.streamableEmbed.src=""}async function loadPFP(){if(!USER.channel)return void(elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="login options">\n    <a\n      role="button"\n      id="loginButton"\n      onclick="login()"\n      class="btn btn-twitch"\n      tabindex="0"\n      data-bs-container="body"\n      data-bs-custom-class="custom-popover"\n      data-bs-placement="bottom"\n      data-bs-trigger="manual"\n      data-bs-toggle="popover"\n      data-bs-title="Not signed in"\n      data-bs-content="You need sign in first before adding options or enabling voting/suggestions"\n      ><span class="twitch-icon"></span>Sign in with Twitch</a\n    >\n    <div class="btn-group" role="group">\n      <button\n        id="btnGroupDropLogin"\n        type="button"\n        class="btn btn-twitch dropdown-toggle"\n        data-bs-toggle="dropdown"\n        data-bs-auto-close="outside"\n        aria-label="other login option, connect manually"\n        aria-expanded="false"\n      ></button>\n      <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDropLogin">\n        <div class="p-3" style="width: 300px">\n          <label for="channelName" class="form-label">Connect to chat directly</label>\n          <div class="input-group mb-3">\n            <span class="input-group-text" id="directLoginChannel">twitch.tv/</span>\n            <input type="text" class="form-control" id="channelName" aria-describedby="directLoginChannel" />\n          </div>\n          <small class="text-body-secondary">Some features will not be available if you connect directly</small><br />\n          <button type="button" onclick="connect()" class="btn btn-primary float-end">Connect</button>\n        </div>\n      </div>\n    </div>\n  </div>');let e=await get7TVPFP(USER.userID);"/pics/donk.png"==e&&USER.access_token&&(e=await getTwitchPFP(USER.channel,USER.access_token)),elements.topRight.innerHTML=`\n  <div class="btn-group" role="group" aria-label="Button group with nested dropdown">\n  <button type="button" id="btnGroupDrop2" class="btn btn-${darkTheme?"dark":"secondary"}"><img src="${e}" alt="profile pic" style="height:2em;"></button>\n  <div class="btn-group" role="group">\n  <button id="btnGroupDrop1" type="button" class="btn btn-${darkTheme?"dark":"secondary"} dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n  ${USER.channel}\n  </button>\n  <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n  <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n  </ul>\n  </div>\n  </div>`}function checkLogin(){return!!USER.channel||(loginButton.show(),setTimeout((function(){loginButton.hide()}),4e3),!1)}function logout(){elements.topRight.innerHTML=' <div class="btn-group" role="group" aria-label="login options">\n  <a\n    role="button"\n    id="loginButton"\n    onclick="login()"\n    class="btn btn-twitch"\n    tabindex="0"\n    data-bs-container="body"\n    data-bs-custom-class="custom-popover"\n    data-bs-placement="bottom"\n    data-bs-trigger="manual"\n    data-bs-toggle="popover"\n    data-bs-title="Not signed in"\n    data-bs-content="You need sign in first before adding options or enabling voting/suggestions"\n    ><span class="twitch-icon"></span>Sign in with Twitch</a\n  >\n  <div class="btn-group" role="group">\n    <button\n      id="btnGroupDropLogin"\n      type="button"\n      class="btn btn-twitch dropdown-toggle"\n      data-bs-toggle="dropdown"\n      data-bs-auto-close="outside"\n      aria-label="other login option, connect manually"\n      aria-expanded="false"\n    ></button>\n    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDropLogin">\n      <div class="p-3" style="width: 300px">\n        <label for="channelName" class="form-label">Connect to chat directly</label>\n        <div class="input-group mb-3">\n          <span class="input-group-text" id="directLoginChannel">twitch.tv/</span>\n          <input type="text" class="form-control" id="channelName" aria-describedby="directLoginChannel" />\n        </div>\n        <small class="text-body-secondary">Some features will not be available if you connect directly</small><br />\n        <button type="button" onclick="connect()" class="btn btn-primary float-end">Connect</button>\n      </div>\n    </div>\n  </div>\n</div>',resetSettings(!0)}async function loadAndConnect(){load_localStorage(),refreshData();const e=new Proxy(new URLSearchParams(window.location.search),{get:(e,t)=>e.get(t)});if(e.channel&&!USER.channel&&!USER.twitchLogin&&!USER.access_token&&!USER.userID){let t=e.channel.replace(/\s+/g,"").toLowerCase();elements.channelName.value=t,USER.channel=t,window.history.replaceState({},document.title,"/")}if(USER.twitchLogin&&!await checkToken(USER.access_token))return USER.channel="",void loginExpiredModal.show();USER.channel&&(connect(),elements.profileLink.value=`https://playlist.chat.vote/${USER.channel||""}`)}function copyLink(){navigator.clipboard.writeText(`https://playlist.chat.vote/${USER.channel||""}`),copyLinkButton.show(),setTimeout((()=>{copyLinkButton.hide()}),1e3)}function switchTheme(e){document.documentElement.setAttribute("data-bs-theme",e?"dark":"light"),document.getElementById("twitchLogo").style.filter=`invert(${e?.25:.65})`,document.getElementById("btnGroupDrop1")&&document.getElementById("btnGroupDrop2")&&(document.getElementById("btnGroupDrop1").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop1").classList.add(""+(e?"btn-dark":"btn-secondary")),document.getElementById("btnGroupDrop2").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop2").classList.add(""+(e?"btn-dark":"btn-secondary")))}function toggleEveryone(e){elements.allowPlebs.checked=e,elements.allowSubs.checked=e,elements.allowMods.checked=e,elements.allowVips.checked=e,elements.allowFirstTimeChatters.checked=e}function updateWhoCanRequest(){let e={"Non subscribers":{allowed:PLAYLIST.allowPlebs,limit:PLAYLIST.plebLimit},Subscribers:{allowed:PLAYLIST.allowSubs,limit:PLAYLIST.subLimit},Mods:{allowed:PLAYLIST.allowMods,limit:PLAYLIST.modLimit},VIPs:{allowed:PLAYLIST.allowVips,limit:PLAYLIST.vipLimit},"First time chatters":{allowed:PLAYLIST.allowFirstTimeChatters,limit:PLAYLIST.firstTimeChatterLimit}},t=[],n=[],l=0;for(let[o,s]of Object.entries(e))s.allowed&&(t.push(o),n.push(`${o} can make ${s.limit} ${1==s.limit?"request":"requests"}`),l+=s.limit-1);0!=t.length?elements.whoCanRequest.innerHTML=`${1==t.length?"Only":""} ${5==t.length?"Everyone":t.join(", ")} will be able to request.<br>\n  ${0==l?"Everyone will get 1 request.":n.join(" - ")}`:elements.whoCanRequest.innerHTML='<span class="text-danger">No one will be able to request</span>'}function checkCommands(){let e=[elements.requestCommand,elements.requestCommandAlias,elements.voteskipCommand,elements.voteskipCommandAlias,elements.songCommand,elements.songCommandAlias,elements.playlistCommand,elements.playlistCommandAlias,elements.skipCommand],t=e.map((e=>e.value.replace(/\s+/g,"").toLowerCase())),n=t.filter(((e,n)=>t.indexOf(e.replace(/\s+/g,"").toLowerCase())!==n)),l=e.filter((e=>n.includes(e.value.replace(/\s+/g,"").toLowerCase()))),o=!1;for(let e=0;e<l.length;e++)l[e].value=l[e].dataset.default,PLAYLIST[l[e].id]=l[e].dataset.default,o=!0;o&&showToast("Commands must be unique","warning",2e3)}function editRequestCommand(e=!1){settingsOffcanvas.show(),setTimeout((()=>{e?(elements.requestCommandAlias.focus(),elements.requestCommandAlias.select()):(elements.requestCommand.focus(),elements.requestCommand.select())}),500)}function toggleMute(){"volume_off"==elements.volumeSliderIcon.innerHTML?(0==oldSliderValue&&(elements.volumeSliderIcon.innerHTML="volume_mute"),oldSliderValue>0&&oldSliderValue<50&&(elements.volumeSliderIcon.innerHTML="volume_down"),oldSliderValue>=50&&(elements.volumeSliderIcon.innerHTML="volume_up"),elements.volumeSlider.value=oldSliderValue,elements.volumeSliderValue.innerHTML=oldSliderValue):(oldSliderValue=elements.volumeSlider.value,elements.volumeSliderIcon.innerHTML="volume_off",elements.volumeSlider.value=0,elements.volumeSliderValue.innerHTML=0)}function changeVolume(e){elements.volumeSliderValue.innerHTML=e.value,0==e.value&&(elements.volumeSliderIcon.innerHTML="volume_mute"),e.value>0&&e.value<50&&(elements.volumeSliderIcon.innerHTML="volume_down"),e.value>=50&&(elements.volumeSliderIcon.innerHTML="volume_up")}function onYouTubeIframeAPIReady(){console.log("onYouTubeIframeAPIReady"),youtubePlayer=new YT.Player("youtubeEmbed",{height:"100%",width:"100%",playerVars:{autoplay:1,enablejsapi:1,playsinline:1,fs:0,rel:0,origin:"chat.vote"},events:{onStateChange:youtubePlayerOnStateChange,onError:youtubePlayerOnError,onAutoplayBlocked:youtubePlayerOnAutoplayBlocked}})}function youtubePlayerOnStateChange(e){console.log(e),e.data==YT.PlayerState.ENDED&&nextItem()}function youtubePlayerOnError(e){console.log(e)}function youtubePlayerOnAutoplayBlocked(e){console.log(e)}function enableTwitchEmbed(){twitchPlayer=new Twitch.Player("twitchEmbed",{width:"100%",height:"100%",channel:"chatvote",parent:["chat.vote"]}),twitchPlayer.addEventListener(Twitch.Player.ENDED,(function(e){nextItem()})),twitchPlayer.addEventListener(Twitch.Player.PAUSE,(function(e){console.log(e)}))}function streamableEmbedEventListeners(){elements.streamableEmbed.addEventListener("ended",(e=>{nextItem()}))}window.onload=function(){darkTheme="true"===(localStorage.getItem("darkTheme")||"true"),elements.darkTheme.checked=darkTheme??!0,switchTheme(elements.darkTheme.checked),loadAndConnect(),loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),resetSettingsModal=new bootstrap.Modal(elements.resetSettingsModal),clearPlaylistModal=new bootstrap.Modal(elements.clearPlaylistModal),settingsOffcanvas=new bootstrap.Offcanvas(elements.settingsOffcanvas),copyLinkButton=new bootstrap.Popover(elements.copyLinkButton),togglePlaylistPopover=new bootstrap.Popover(elements.togglePlaylistLabel),playlistTab=new bootstrap.Tab(elements.playlistTab),approvalTab=new bootstrap.Tab(elements.approvalTab),historyTab=new bootstrap.Tab(elements.historyTab),USER.channel||(loginButton=new bootstrap.Popover(elements.loginButton)),elements.darkTheme.onchange=function(){switchTheme(this.checked),saveSettings()},elements.approvalQueue.onchange=function(){saveSettings(),elements.approvalTab.classList.contains("active")&&playlistTab.show()},elements.togglePlaylist.onchange=function(){playlist_open=this.checked,this.checked?(elements.togglePlaylistLabel.classList="btn btn-lg btn-danger",elements.togglePlaylistLabel.innerHTML="Close<br>Playlist"):(elements.togglePlaylistLabel.classList="btn btn-lg btn-success",elements.togglePlaylistLabel.innerHTML="Open<br>Playlist")},elements.selectAll.addEventListener("click",(e=>{toggleEveryone(!0),saveSettings()})),elements.unselectAll.addEventListener("click",(e=>{toggleEveryone(!1),saveSettings()})),elements.link.addEventListener("keydown",(e=>{"Enter"===e.key&&addLink()})),enableTooltips(),enableTwitchEmbed(),streamableEmbedEventListeners(),elements.twitchClipsEmbed.src=`https://clips.twitch.tv/embed?parent=${window.location.hostname}&autoplay=true`},window.onSpotifyIframeApiReady=e=>{console.log("onSpotifyIframeApiReady");e.createController(elements.spotifyEmbed,{},(e=>{spotifyPlayer=e,e.addListener("playback_update",(e=>{e.data.position==e.data.duration&&e.data.duration>0&&nextItem()}))}))};